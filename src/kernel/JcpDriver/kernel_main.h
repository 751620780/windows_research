#pragma once

#include "../kernel_shared/kernel_pch.h"
#include "../kernel_shared/kernel_sr.h"
#include "../kernel_shared/kernel_common.h"
//#include "../kernel_shared/x64_17763_253.h"
#include "../kernel_thirdparty/infinityhook/infinityhook.h"

//WINDOWS 7 7601 实验使用的内核基址：0xfffff80003e63000

NTSTATUS DetourNtCreateFile(
	_Out_ PHANDLE FileHandle,
	_In_ ACCESS_MASK DesiredAccess,
	_In_ POBJECT_ATTRIBUTES ObjectAttributes,
	_Out_ PIO_STATUS_BLOCK IoStatusBlock,
	_In_opt_ PLARGE_INTEGER AllocationSize,
	_In_ ULONG FileAttributes,
	_In_ ULONG ShareAccess,
	_In_ ULONG CreateDisposition,
	_In_ ULONG CreateOptions,
	_In_reads_bytes_opt_(EaLength) PVOID EaBuffer,
	_In_ ULONG EaLength
);

NTSTATUS DetourNtMapViewOfSection(
	IN HANDLE               SectionHandle,
	IN HANDLE               ProcessHandle,
	IN OUT PVOID            *BaseAddress OPTIONAL,
	IN UINT64               ZeroBits OPTIONAL,
	IN UINT64               CommitSize,
	IN OUT PLARGE_INTEGER   SectionOffset OPTIONAL,
	IN OUT PUINT64          ViewSize,
	IN   SECTION_INHERIT    InheritDisposition,
	IN UINT64               AllocationType OPTIONAL,
	IN ULONG                Protect
);

NTSTATUS DetourNtUnMapViewOfSection(
	HANDLE ProcessHandle,
	PVOID  BaseAddress
);

NTSTATUS DetourNtAllocateVirtualMemory(
	HANDLE ProcessHandle,
	PVOID *BaseAddress,
	ULONG_PTR ZeroBits,
	PSIZE_T RegionSize,
	ULONG AllocationType,
	ULONG Protect
);

NTSTATUS DetourNtFreeVirtualMemory(
	_In_    HANDLE  ProcessHandle,						//目标进程的句柄
	_Inout_ PVOID   *BaseAddress,						//保存释放的内存的基址的指针
	_Inout_ PSIZE_T RegionSize,							//释放的区域大小，如果是0，系统将释放整个域。返回后其将保存真正的释放大小
	_In_    ULONG   FreeType							//MEM_DECOMMIT, or MEM_RELEASE.
);

NTSTATUS DetourNtProtectVirtualMemory(
	IN HANDLE		ProcessHandle,
	IN OUT PVOID	*UnsafeBaseAddress,
	IN OUT SIZE_T	*UnsafeNumberOfBytesToProtect,
	IN ULONG		NewAccessProtection,
	OUT PULONG		UnsafeOldAccessProtection
);

NTSTATUS DetourNtQueryInformationProcess(
	IN HANDLE				ProcessHandle,
	IN PROCESS_INFORMATION_CLASS_SR	ProcessInformationClass,
	OUT PVOID				ProcessInformation,
	IN ULONG				ProcessInformationLength,
	OUT PULONG				ReturnLength
);

NTSTATUS DetourNtQueryObject(
	__in HANDLE Handle,
	__in OBJECT_INFORMATION_CLASS_SR ObjectInformationClass,
	__out_bcount_opt(ObjectInformationLength) PVOID ObjectInformation,
	__in ULONG ObjectInformationLength,
	__out_opt PULONG ReturnLength
);

NTSTATUS DetourNtSetInformationThread(
	IN HANDLE               ThreadHandle,
	IN THREAD_INFORMATION_CLASS_SR ThreadInformationClass,
	IN PVOID                ThreadInformation,
	IN ULONG                ThreadInformationLength
);

NTSTATUS DetourNtQueryInformationThread(
	__in HANDLE ThreadHandle,
	__in THREAD_INFORMATION_CLASS_SR ThreadInformationClass,
	__out_bcount(ThreadInformationLength) PVOID ThreadInformation,
	__in ULONG ThreadInformationLength,
	__out_opt PULONG ReturnLength
);

NTSTATUS DetourNtQuerySystemInformation(
	__in SYSTEM_INFORMATION_CLASS_SR SystemInformationClass,
	__out_bcount_opt(SystemInformationLength) PVOID SystemInformation,
	__in ULONG SystemInformationLength,
	__out_opt PULONG ReturnLength
);

NTSTATUS DetourNtGetContextThread(HANDLE hThread, PCONTEXT pContext);
NTSTATUS DetourNtSetContextThread(HANDLE ThreadHandle, PCONTEXT pContext);

NTSTATUS DetourNtClose(HANDLE Handle);

NTSTATUS DetourNtYieldExecution();

NTSTATUS DetourNtCreateProcess(
	OUT PHANDLE           ProcessHandle,
	IN ACCESS_MASK        DesiredAccess,
	IN POBJECT_ATTRIBUTES ObjectAttributes OPTIONAL,
	IN HANDLE             ParentProcess,
	IN BOOLEAN            InheritObjectTable,
	IN HANDLE             SectionHandle OPTIONAL,
	IN HANDLE             DebugPort OPTIONAL,
	IN HANDLE             ExceptionPort OPTIONAL
);



NTSTATUS DetourNtCreateUserProcess(
	OUT PHANDLE ProcessHandle,
	OUT PHANDLE ThreadHandle,
	IN ACCESS_MASK ProcessDesiredAccess,
	IN ACCESS_MASK ThreadDesiredAccess,
	IN POBJECT_ATTRIBUTES ProcessObjectAttributes OPTIONAL,
	IN POBJECT_ATTRIBUTES ThreadObjectAttributes OPTIONAL,
	IN ULONG CreateProcessFlags,
	IN ULONG CreateThreadFlags,
	IN PRTL_USER_PROCESS_PARAMETERS_SR ProcessParameters,
	IN PVOID Parameter9,
	IN PNT_PROC_THREAD_ATTRIBUTE_LIST_SR AttributeList
);

NTSTATUS DetourNtOpenProcess(
	OUT PHANDLE             ProcessHandle,
	IN ACCESS_MASK          AccessMask,
	IN POBJECT_ATTRIBUTES   ObjectAttributes,
	IN PCLIENT_ID           ClientId
);

NTSTATUS DetourNtOpenThread(
	OUT PHANDLE             ThreadHandle,
	IN ACCESS_MASK          AccessMask,
	IN POBJECT_ATTRIBUTES   ObjectAttributes,
	IN PCLIENT_ID           ClientId
);

NTSTATUS DetourNtCreateTimer(
	OUT PHANDLE             TimerHandle,
	IN ACCESS_MASK          DesiredAccess,
	IN POBJECT_ATTRIBUTES   ObjectAttributes OPTIONAL,
	IN TIMER_TYPE           TimerType
	);

NTSTATUS DetourNtDeviceIoControlFile(
	HANDLE           FileHandle,
	HANDLE           Event,
	PIO_APC_ROUTINE  ApcRoutine,
	PVOID            ApcContext,
	PIO_STATUS_BLOCK IoStatusBlock,
	ULONG            IoControlCode,
	PVOID            InputBuffer,
	ULONG            InputBufferLength,
	PVOID            OutputBuffer,
	ULONG            OutputBufferLength
	);



NTSTATUS driver_unload(PDRIVER_OBJECT pdriver_object);

NTSTATUS communicate_to_user(DWORD type, PVOID data, DWORD length);


UNICODE_STRING unicode_str = RTL_CONSTANT_STRING(L"");


//这是windows 10的SSDT表的函数
FUN_INFO_ENTRY ssdt_fun_table_win10[] =
{
	//注意：并不是所有的函数都是导出的，因此应当从ssdt表中获得
	/*		0		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheck"),
	/*		1		*/	0,0,RTL_CONSTANT_STRING(L"NtWorkerFactoryWorkerReady"),
	/*		2		*/	0,0,RTL_CONSTANT_STRING(L"NtAcceptConnectPort"),
	/*		3		*/	0,0,RTL_CONSTANT_STRING(L"NtMapUserPhysicalPagesScatter"),
	/*		4		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForSingleObject"),
	/*		5		*/	0,0,RTL_CONSTANT_STRING(L"NtCallbackReturn"),
	/*		6		*/	0,0,RTL_CONSTANT_STRING(L"NtReadFile"),
	/*		7		*/	0,DetourNtDeviceIoControlFile,RTL_CONSTANT_STRING(L"NtDeviceIoControlFile"),
	/*		8		*/	0,0,RTL_CONSTANT_STRING(L"NtWriteFile"),
	/*		9		*/	0,0,RTL_CONSTANT_STRING(L"NtRemoveIoCompletion"),
	/*		10		*/	0,0,RTL_CONSTANT_STRING(L"NtReleaseSemaphore"),
	/*		11		*/	0,0,RTL_CONSTANT_STRING(L"NtReplyWaitReceivePort"),
	/*		12		*/	0,0,RTL_CONSTANT_STRING(L"NtReplyPort"),
	/*		13		*/	0,DetourNtSetInformationThread,RTL_CONSTANT_STRING(L"NtSetInformationThread"),
	/*		14		*/	0,0,RTL_CONSTANT_STRING(L"NtSetEvent"),
	/*		15		*/	0,DetourNtClose,RTL_CONSTANT_STRING(L"NtClose"),
	/*		16		*/	0,DetourNtQueryObject,RTL_CONSTANT_STRING(L"NtQueryObject"),
	/*		17		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationFile"),
	/*		18		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenKey"),
	/*		19		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateValueKey"),
	/*		20		*/	0,0,RTL_CONSTANT_STRING(L"NtFindAtom"),
	/*		21		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDefaultLocale"),
	/*		22		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryKey"),
	/*		23		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryValueKey"),
	/*		24		*/	0,DetourNtAllocateVirtualMemory,RTL_CONSTANT_STRING(L"NtAllocateVirtualMemory"),
	/*		25		*/	0,DetourNtQueryInformationProcess,RTL_CONSTANT_STRING(L"NtQueryInformationProcess"),
	/*		26		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForMultipleObjects32"),
	/*		27		*/	0,0,RTL_CONSTANT_STRING(L"NtWriteFileGather"),
	/*		28		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationProcess"),
	/*		29		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateKey"),
	/*		30		*/	0,DetourNtFreeVirtualMemory,RTL_CONSTANT_STRING(L"NtFreeVirtualMemory"),
	/*		31		*/	0,0,RTL_CONSTANT_STRING(L"NtImpersonateClientOfPort"),
	/*		32		*/	0,0,RTL_CONSTANT_STRING(L"NtReleaseMutant"),
	/*		33		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationToken"),
	/*		34		*/	0,0,RTL_CONSTANT_STRING(L"NtRequestWaitReplyPort"),
	/*		35		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryVirtualMemory"),
	/*		36		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenThreadToken"),
	/*		37		*/	0,DetourNtQueryInformationThread,RTL_CONSTANT_STRING(L"NtQueryInformationThread"),
	/*		38		*/	0,DetourNtOpenProcess,RTL_CONSTANT_STRING(L"NtOpenProcess"),
	/*		39		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationFile"),
	/*		40		*/	0,DetourNtMapViewOfSection,RTL_CONSTANT_STRING(L"NtMapViewOfSection"),
	/*		41		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckAndAuditAlarm"),
	/*		42		*/	0,DetourNtUnMapViewOfSection,RTL_CONSTANT_STRING(L"NtUnmapViewOfSection"),
	/*		43		*/	0,0,RTL_CONSTANT_STRING(L"NtReplyWaitReceivePortEx"),
	/*		44		*/	0,0,RTL_CONSTANT_STRING(L"NtTerminateProcess"),
	/*		45		*/	0,0,RTL_CONSTANT_STRING(L"NtSetEventBoostPriority"),
	/*		46		*/	0,0,RTL_CONSTANT_STRING(L"NtReadFileScatter"),
	/*		47		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenThreadTokenEx"),
	/*		48		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenProcessTokenEx"),
	/*		49		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryPerformanceCounter"),
	/*		50		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateKey"),
	/*		51		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenFile"),
	/*		52		*/	0,0,RTL_CONSTANT_STRING(L"NtDelayExecution"),
	/*		53		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDirectoryFile"),
	/*		54		*/	0,DetourNtQuerySystemInformation,RTL_CONSTANT_STRING(L"NtQuerySystemInformation"),
	/*		55		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenSection"),
	/*		56		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryTimer"),
	/*		57		*/	0,0,RTL_CONSTANT_STRING(L"NtFsControlFile"),
	/*		58		*/	0,0,RTL_CONSTANT_STRING(L"NtWriteVirtualMemory"),
	/*		59		*/	0,0,RTL_CONSTANT_STRING(L"NtCloseObjectAuditAlarm"),
	/*		60		*/	0,0,RTL_CONSTANT_STRING(L"NtDuplicateObject"),
	/*		61		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryAttributesFile"),
	/*		62		*/	0,0,RTL_CONSTANT_STRING(L"NtClearEvent"),
	/*		63		*/	0,0,RTL_CONSTANT_STRING(L"NtReadVirtualMemory"),
	/*		64		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenEvent"),
	/*		65		*/	0,0,RTL_CONSTANT_STRING(L"NtAdjustPrivilegesToken"),
	/*		66		*/	0,0,RTL_CONSTANT_STRING(L"NtDuplicateToken"),
	/*		67		*/	0,0,RTL_CONSTANT_STRING(L"NtContinue"),
	/*		68		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDefaultUILanguage"),
	/*		69		*/	0,0,RTL_CONSTANT_STRING(L"NtQueueApcThread"),
	/*		70		*/	0,DetourNtYieldExecution,RTL_CONSTANT_STRING(L"NtYieldExecution"),
	/*		71		*/	0,0,RTL_CONSTANT_STRING(L"NtAddAtom"),
	/*		72		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateEvent"),
	/*		73		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryVolumeInformationFile"),
	/*		74		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateSection"),
	/*		75		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushBuffersFile"),
	/*		76		*/	0,0,RTL_CONSTANT_STRING(L"NtApphelpCacheControl"),
	/*		77		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateProcessEx"),
	/*		78		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateThread"),
	/*		79		*/	0,0,RTL_CONSTANT_STRING(L"NtIsProcessInJob"),
	/*		80		*/	0,DetourNtProtectVirtualMemory,RTL_CONSTANT_STRING(L"NtProtectVirtualMemory"),
	/*		81		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySection"),
	/*		82		*/	0,0,RTL_CONSTANT_STRING(L"NtResumeThread"),
	/*		83		*/	0,0,RTL_CONSTANT_STRING(L"NtTerminateThread"),
	/*		84		*/	0,0,RTL_CONSTANT_STRING(L"NtReadRequestData"),
	/*		85		*/	0,DetourNtCreateFile,RTL_CONSTANT_STRING(L"NtCreateFile"),
	/*		86		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryEvent"),
	/*		87		*/	0,0,RTL_CONSTANT_STRING(L"NtWriteRequestData"),
	/*		88		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenDirectoryObject"),
	/*		89		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckByTypeAndAuditAlarm"),
	/*		90		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySystemTime"),
	/*		91		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForMultipleObjects"),
	/*		92		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationObject"),
	/*		93		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelIoFile"),
	/*		94		*/	0,0,RTL_CONSTANT_STRING(L"NtTraceEvent"),
	/*		95		*/	0,0,RTL_CONSTANT_STRING(L"NtPowerInformation"),
	/*		96		*/	0,0,RTL_CONSTANT_STRING(L"NtSetValueKey"),
	/*		97		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelTimer"),
	/*		98		*/	0,0,RTL_CONSTANT_STRING(L"NtSetTimer"),
	/*		99		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckByType"),
	/*		100		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckByTypeResultList"),
	/*		101		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckByTypeResultListAndAuditAlarm"),
	/*		102		*/	0,0,RTL_CONSTANT_STRING(L"NtAccessCheckByTypeResultListAndAuditAlarmByHandle"),
	/*		103		*/	0,0,RTL_CONSTANT_STRING(L"NtAcquireProcessActivityReference"),
	/*		104		*/	0,0,RTL_CONSTANT_STRING(L"NtAddAtomEx"),
	/*		105		*/	0,0,RTL_CONSTANT_STRING(L"NtAddBootEntry"),
	/*		106		*/	0,0,RTL_CONSTANT_STRING(L"NtAddDriverEntry"),
	/*		107		*/	0,0,RTL_CONSTANT_STRING(L"NtAdjustGroupsToken"),
	/*		108		*/	0,0,RTL_CONSTANT_STRING(L"NtAdjustTokenClaimsAndDeviceGroups"),
	/*		109		*/	0,0,RTL_CONSTANT_STRING(L"NtAlertResumeThread"),
	/*		110		*/	0,0,RTL_CONSTANT_STRING(L"NtAlertThread"),
	/*		111		*/	0,0,RTL_CONSTANT_STRING(L"NtAlertThreadByThreadId"),
	/*		112		*/	0,0,RTL_CONSTANT_STRING(L"NtAllocateLocallyUniqueId"),
	/*		113		*/	0,0,RTL_CONSTANT_STRING(L"NtAllocateReserveObject"),
	/*		114		*/	0,0,RTL_CONSTANT_STRING(L"NtAllocateUserPhysicalPages"),
	/*		115		*/	0,0,RTL_CONSTANT_STRING(L"NtAllocateUuids"),
	/*		116		*/	0,0,RTL_CONSTANT_STRING(L"NtAllocateVirtualMemoryEx"),
	/*		117		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcAcceptConnectPort"),
	/*		118		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCancelMessage"),
	/*		119		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcConnectPort"),
	/*		120		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcConnectPortEx"),
	/*		121		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCreatePort"),
	/*		122		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCreatePortSection"),
	/*		123		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCreateResourceReserve"),
	/*		124		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCreateSectionView"),
	/*		125		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcCreateSecurityContext"),
	/*		126		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcDeletePortSection"),
	/*		127		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcDeleteResourceReserve"),
	/*		128		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcDeleteSectionView"),
	/*		129		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcDeleteSecurityContext"),
	/*		130		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcDisconnectPort"),
	/*		131		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcImpersonateClientContainerOfPort"),
	/*		132		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcImpersonateClientOfPort"),
	/*		133		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcOpenSenderProcess"),
	/*		134		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcOpenSenderThread"),
	/*		135		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcQueryInformation"),
	/*		136		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcQueryInformationMessage"),
	/*		137		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcRevokeSecurityContext"),
	/*		138		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcSendWaitReceivePort"),
	/*		139		*/	0,0,RTL_CONSTANT_STRING(L"NtAlpcSetInformation"),
	/*		140		*/	0,0,RTL_CONSTANT_STRING(L"NtAreMappedFilesTheSame"),
	/*		141		*/	0,0,RTL_CONSTANT_STRING(L"NtAssignProcessToJobObject"),
	/*		142		*/	0,0,RTL_CONSTANT_STRING(L"NtAssociateWaitCompletionPacket"),
	/*		143		*/	0,0,RTL_CONSTANT_STRING(L"NtCallEnclave"),
	/*		144		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelIoFileEx"),
	/*		145		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelSynchronousIoFile"),
	/*		146		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelTimer2"),
	/*		147		*/	0,0,RTL_CONSTANT_STRING(L"NtCancelWaitCompletionPacket"),
	/*		148		*/	0,0,RTL_CONSTANT_STRING(L"NtCommitComplete"),
	/*		149		*/	0,0,RTL_CONSTANT_STRING(L"NtCommitEnlistment"),
	/*		150		*/	0,0,RTL_CONSTANT_STRING(L"NtCommitRegistryTransaction"),
	/*		151		*/	0,0,RTL_CONSTANT_STRING(L"NtCommitTransaction"),
	/*		152		*/	0,0,RTL_CONSTANT_STRING(L"NtCompactKeys"),
	/*		153		*/	0,0,RTL_CONSTANT_STRING(L"NtCompareObjects"),
	/*		154		*/	0,0,RTL_CONSTANT_STRING(L"NtCompareSigningLevels"),
	/*		155		*/	0,0,RTL_CONSTANT_STRING(L"NtCompareTokens"),
	/*		156		*/	0,0,RTL_CONSTANT_STRING(L"NtCompleteConnectPort"),
	/*		157		*/	0,0,RTL_CONSTANT_STRING(L"NtCompressKey"),
	/*		158		*/	0,0,RTL_CONSTANT_STRING(L"NtConnectPort"),
	/*		159		*/	0,0,RTL_CONSTANT_STRING(L"NtConvertBetweenAuxiliaryCounterAndPerformanceCounter"),
	/*		160		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateDebugObject"),
	/*		161		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateDirectoryObject"),
	/*		162		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateDirectoryObjectEx"),
	/*		163		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateEnclave"),
	/*		164		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateEnlistment"),
	/*		165		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateEventPair"),
	/*		166		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateIRTimer"),
	/*		167		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateIoCompletion"),
	/*		168		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateJobObject"),
	/*		169		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateJobSet"),
	/*		170		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateKeyTransacted"),
	/*		171		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateKeyedEvent"),
	/*		172		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateLowBoxToken"),
	/*		173		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateMailslotFile"),
	/*		174		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateMutant"),
	/*		175		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateNamedPipeFile"),
	/*		176		*/	0,0,RTL_CONSTANT_STRING(L"NtCreatePagingFile"),
	/*		177		*/	0,0,RTL_CONSTANT_STRING(L"NtCreatePartition"),
	/*		178		*/	0,0,RTL_CONSTANT_STRING(L"NtCreatePort"),
	/*		179		*/	0,0,RTL_CONSTANT_STRING(L"NtCreatePrivateNamespace"),
	/*		180		*/	0,DetourNtCreateProcess,RTL_CONSTANT_STRING(L"NtCreateProcess"),
	/*		181		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateProfile"),
	/*		182		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateProfileEx"),
	/*		183		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateRegistryTransaction"),
	/*		184		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateResourceManager"),
	/*		185		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateSectionEx"),
	/*		186		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateSemaphore"),
	/*		187		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateSymbolicLinkObject"),
	/*		188		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateThreadEx"),
	/*		189		*/	0, DetourNtCreateTimer,RTL_CONSTANT_STRING(L"NtCreateTimer"),
	/*		190		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateTimer2"),
	/*		191		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateToken"),
	/*		192		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateTokenEx"),
	/*		193		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateTransaction"),
	/*		194		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateTransactionManager"),
	/*		195		*/	0,DetourNtCreateUserProcess,RTL_CONSTANT_STRING(L"NtCreateUserProcess"),
	/*		196		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateWaitCompletionPacket"),
	/*		197		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateWaitablePort"),
	/*		198		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateWnfStateName"),
	/*		199		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateWorkerFactory"),
	/*		200		*/	0,0,RTL_CONSTANT_STRING(L"NtDebugActiveProcess"),
	/*		201		*/	0,0,RTL_CONSTANT_STRING(L"NtDebugContinue"),
	/*		202		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteAtom"),
	/*		203		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteBootEntry"),
	/*		204		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteDriverEntry"),
	/*		205		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteFile"),
	/*		206		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteKey"),
	/*		207		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteObjectAuditAlarm"),
	/*		208		*/	0,0,RTL_CONSTANT_STRING(L"NtDeletePrivateNamespace"),
	/*		209		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteValueKey"),
	/*		210		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteWnfStateData"),
	/*		211		*/	0,0,RTL_CONSTANT_STRING(L"NtDeleteWnfStateName"),
	/*		212		*/	0,0,RTL_CONSTANT_STRING(L"NtDisableLastKnownGood"),
	/*		213		*/	0,0,RTL_CONSTANT_STRING(L"NtDisplayString"),
	/*		214		*/	0,0,RTL_CONSTANT_STRING(L"NtDrawText"),
	/*		215		*/	0,0,RTL_CONSTANT_STRING(L"NtEnableLastKnownGood"),
	/*		216		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateBootEntries"),
	/*		217		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateDriverEntries"),
	/*		218		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateSystemEnvironmentValuesEx"),
	/*		219		*/	0,0,RTL_CONSTANT_STRING(L"NtEnumerateTransactionObject"),
	/*		220		*/	0,0,RTL_CONSTANT_STRING(L"NtExtendSection"),
	/*		221		*/	0,0,RTL_CONSTANT_STRING(L"NtFilterBootOption"),
	/*		222		*/	0,0,RTL_CONSTANT_STRING(L"NtFilterToken"),
	/*		223		*/	0,0,RTL_CONSTANT_STRING(L"NtFilterTokenEx"),
	/*		224		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushBuffersFileEx"),
	/*		225		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushInstallUILanguage"),
	/*		226		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushInstructionCache"),
	/*		227		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushKey"),
	/*		228		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushProcessWriteBuffers"),
	/*		229		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushVirtualMemory"),
	/*		230		*/	0,0,RTL_CONSTANT_STRING(L"NtFlushWriteBuffer"),
	/*		231		*/	0,0,RTL_CONSTANT_STRING(L"NtFreeUserPhysicalPages"),
	/*		232		*/	0,0,RTL_CONSTANT_STRING(L"NtFreezeRegistry"),
	/*		233		*/	0,0,RTL_CONSTANT_STRING(L"NtFreezeTransactions"),
	/*		234		*/	0,0,RTL_CONSTANT_STRING(L"NtGetCachedSigningLevel"),
	/*		235		*/	0,0,RTL_CONSTANT_STRING(L"NtGetCompleteWnfStateSubscription"),
	/*		236		*/	0, DetourNtGetContextThread,RTL_CONSTANT_STRING(L"NtGetContextThread"),//only 64 bit process will call this function
	/*		237		*/	0,0,RTL_CONSTANT_STRING(L"NtGetCurrentProcessorNumber"),
	/*		238		*/	0,0,RTL_CONSTANT_STRING(L"NtGetCurrentProcessorNumberEx"),
	/*		239		*/	0,0,RTL_CONSTANT_STRING(L"NtGetDevicePowerState"),
	/*		240		*/	0,0,RTL_CONSTANT_STRING(L"NtGetMUIRegistryInfo"),
	/*		241		*/	0,0,RTL_CONSTANT_STRING(L"NtGetNextProcess"),
	/*		242		*/	0,0,RTL_CONSTANT_STRING(L"NtGetNextThread"),
	/*		243		*/	0,0,RTL_CONSTANT_STRING(L"NtGetNlsSectionPtr"),
	/*		244		*/	0,0,RTL_CONSTANT_STRING(L"NtGetNotificationResourceManager"),
	/*		245		*/	0,0,RTL_CONSTANT_STRING(L"NtGetWriteWatch"),
	/*		246		*/	0,0,RTL_CONSTANT_STRING(L"NtImpersonateAnonymousToken"),
	/*		247		*/	0,0,RTL_CONSTANT_STRING(L"NtImpersonateThread"),
	/*		248		*/	0,0,RTL_CONSTANT_STRING(L"NtInitializeEnclave"),
	/*		249		*/	0,0,RTL_CONSTANT_STRING(L"NtInitializeNlsFiles"),
	/*		250		*/	0,0,RTL_CONSTANT_STRING(L"NtInitializeRegistry"),
	/*		251		*/	0,0,RTL_CONSTANT_STRING(L"NtInitiatePowerAction"),
	/*		252		*/	0,0,RTL_CONSTANT_STRING(L"NtIsSystemResumeAutomatic"),
	/*		253		*/	0,0,RTL_CONSTANT_STRING(L"NtIsUILanguageComitted"),
	/*		254		*/	0,0,RTL_CONSTANT_STRING(L"NtListenPort"),
	/*		255		*/	0,0,RTL_CONSTANT_STRING(L"NtLoadDriver"),
	/*		256		*/	0,0,RTL_CONSTANT_STRING(L"NtLoadEnclaveData"),
	/*		257		*/	0,0,RTL_CONSTANT_STRING(L"NtLoadKey"),
	/*		258		*/	0,0,RTL_CONSTANT_STRING(L"NtLoadKey2"),
	/*		259		*/	0,0,RTL_CONSTANT_STRING(L"NtLoadKeyEx"),
	/*		260		*/	0,0,RTL_CONSTANT_STRING(L"NtLockFile"),
	/*		261		*/	0,0,RTL_CONSTANT_STRING(L"NtLockProductActivationKeys"),
	/*		262		*/	0,0,RTL_CONSTANT_STRING(L"NtLockRegistryKey"),
	/*		263		*/	0,0,RTL_CONSTANT_STRING(L"NtLockVirtualMemory"),
	/*		264		*/	0,0,RTL_CONSTANT_STRING(L"NtMakePermanentObject"),
	/*		265		*/	0,0,RTL_CONSTANT_STRING(L"NtMakeTemporaryObject"),
	/*		266		*/	0,0,RTL_CONSTANT_STRING(L"NtManageHotPatch"),
	/*		267		*/	0,0,RTL_CONSTANT_STRING(L"NtManagePartition"),
	/*		268		*/	0,0,RTL_CONSTANT_STRING(L"NtMapCMFModule"),
	/*		269		*/	0,0,RTL_CONSTANT_STRING(L"NtMapUserPhysicalPages"),
	/*		270		*/	0,0,RTL_CONSTANT_STRING(L"NtMapViewOfSectionEx"),
	/*		271		*/	0,0,RTL_CONSTANT_STRING(L"NtModifyBootEntry"),
	/*		272		*/	0,0,RTL_CONSTANT_STRING(L"NtModifyDriverEntry"),
	/*		273		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyChangeDirectoryFile"),
	/*		274		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyChangeDirectoryFileEx"),
	/*		275		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyChangeKey"),
	/*		276		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyChangeMultipleKeys"),
	/*		277		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyChangeSession"),
	/*		278		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenEnlistment"),
	/*		279		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenEventPair"),
	/*		280		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenIoCompletion"),
	/*		281		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenJobObject"),
	/*		282		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenKeyEx"),
	/*		283		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenKeyTransacted"),
	/*		284		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenKeyTransactedEx"),
	/*		285		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenKeyedEvent"),
	/*		286		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenMutant"),
	/*		287		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenObjectAuditAlarm"),
	/*		288		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenPartition"),
	/*		289		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenPrivateNamespace"),
	/*		290		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenProcessToken"),
	/*		291		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenRegistryTransaction"),
	/*		292		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenResourceManager"),
	/*		293		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenSemaphore"),
	/*		294		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenSession"),
	/*		295		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenSymbolicLinkObject"),
	/*		296		*/	0, DetourNtOpenThread,RTL_CONSTANT_STRING(L"NtOpenThread"),
	/*		297		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenTimer"),
	/*		298		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenTransaction"),
	/*		299		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenTransactionManager"),
	/*		300		*/	0,0,RTL_CONSTANT_STRING(L"NtPlugPlayControl"),
	/*		301		*/	0,0,RTL_CONSTANT_STRING(L"NtPrePrepareComplete"),
	/*		302		*/	0,0,RTL_CONSTANT_STRING(L"NtPrePrepareEnlistment"),
	/*		303		*/	0,0,RTL_CONSTANT_STRING(L"NtPrepareComplete"),
	/*		304		*/	0,0,RTL_CONSTANT_STRING(L"NtPrepareEnlistment"),
	/*		305		*/	0,0,RTL_CONSTANT_STRING(L"NtPrivilegeCheck"),
	/*		306		*/	0,0,RTL_CONSTANT_STRING(L"NtPrivilegeObjectAuditAlarm"),
	/*		307		*/	0,0,RTL_CONSTANT_STRING(L"NtPrivilegedServiceAuditAlarm"),
	/*		308		*/	0,0,RTL_CONSTANT_STRING(L"NtPropagationComplete"),
	/*		309		*/	0,0,RTL_CONSTANT_STRING(L"NtPropagationFailed"),
	/*		310		*/	0,0,RTL_CONSTANT_STRING(L"NtPulseEvent"),
	/*		311		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryAuxiliaryCounterFrequency"),
	/*		312		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryBootEntryOrder"),
	/*		313		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryBootOptions"),
	/*		314		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDebugFilterState"),
	/*		315		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDirectoryFileEx"),
	/*		316		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDirectoryObject"),
	/*		317		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryDriverEntryOrder"),
	/*		318		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryEaFile"),
	/*		319		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryFullAttributesFile"),
	/*		320		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationAtom"),
	/*		321		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationByName"),
	/*		322		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationEnlistment"),
	/*		323		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationJobObject"),
	/*		324		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationPort"),
	/*		325		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationResourceManager"),
	/*		326		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationTransaction"),
	/*		327		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationTransactionManager"),
	/*		328		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInformationWorkerFactory"),
	/*		329		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryInstallUILanguage"),
	/*		330		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryIntervalProfile"),
	/*		331		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryIoCompletion"),
	/*		332		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryLicenseValue"),
	/*		333		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryMultipleValueKey"),
	/*		334		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryMutant"),
	/*		335		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryOpenSubKeys"),
	/*		336		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryOpenSubKeysEx"),
	/*		337		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryPortInformationProcess"),
	/*		338		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryQuotaInformationFile"),
	/*		339		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySecurityAttributesToken"),
	/*		340		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySecurityObject"),
	/*		341		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySecurityPolicy"),
	/*		342		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySemaphore"),
	/*		343		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySymbolicLinkObject"),
	/*		344		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySystemEnvironmentValue"),
	/*		345		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySystemEnvironmentValueEx"),
	/*		346		*/	0,0,RTL_CONSTANT_STRING(L"NtQuerySystemInformationEx"),
	/*		347		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryTimerResolution"),
	/*		348		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryWnfStateData"),
	/*		349		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryWnfStateNameInformation"),
	/*		350		*/	0,0,RTL_CONSTANT_STRING(L"NtQueueApcThreadEx"),
	/*		351		*/	0,0,RTL_CONSTANT_STRING(L"NtRaiseException"),
	/*		352		*/	0,0,RTL_CONSTANT_STRING(L"NtRaiseHardError"),
	/*		353		*/	0,0,RTL_CONSTANT_STRING(L"NtReadOnlyEnlistment"),
	/*		354		*/	0,0,RTL_CONSTANT_STRING(L"NtRecoverEnlistment"),
	/*		355		*/	0,0,RTL_CONSTANT_STRING(L"NtRecoverResourceManager"),
	/*		356		*/	0,0,RTL_CONSTANT_STRING(L"NtRecoverTransactionManager"),
	/*		357		*/	0,0,RTL_CONSTANT_STRING(L"NtRegisterProtocolAddressInformation"),
	/*		358		*/	0,0,RTL_CONSTANT_STRING(L"NtRegisterThreadTerminatePort"),
	/*		359		*/	0,0,RTL_CONSTANT_STRING(L"NtReleaseKeyedEvent"),
	/*		360		*/	0,0,RTL_CONSTANT_STRING(L"NtReleaseWorkerFactoryWorker"),
	/*		361		*/	0,0,RTL_CONSTANT_STRING(L"NtRemoveIoCompletionEx"),
	/*		362		*/	0,0,RTL_CONSTANT_STRING(L"NtRemoveProcessDebug"),
	/*		363		*/	0,0,RTL_CONSTANT_STRING(L"NtRenameKey"),
	/*		364		*/	0,0,RTL_CONSTANT_STRING(L"NtRenameTransactionManager"),
	/*		365		*/	0,0,RTL_CONSTANT_STRING(L"NtReplaceKey"),
	/*		366		*/	0,0,RTL_CONSTANT_STRING(L"NtReplacePartitionUnit"),
	/*		367		*/	0,0,RTL_CONSTANT_STRING(L"NtReplyWaitReplyPort"),
	/*		368		*/	0,0,RTL_CONSTANT_STRING(L"NtRequestPort"),
	/*		369		*/	0,0,RTL_CONSTANT_STRING(L"NtResetEvent"),
	/*		370		*/	0,0,RTL_CONSTANT_STRING(L"NtResetWriteWatch"),
	/*		371		*/	0,0,RTL_CONSTANT_STRING(L"NtRestoreKey"),
	/*		372		*/	0,0,RTL_CONSTANT_STRING(L"NtResumeProcess"),
	/*		373		*/	0,0,RTL_CONSTANT_STRING(L"NtRevertContainerImpersonation"),
	/*		374		*/	0,0,RTL_CONSTANT_STRING(L"NtRollbackComplete"),
	/*		375		*/	0,0,RTL_CONSTANT_STRING(L"NtRollbackEnlistment"),
	/*		376		*/	0,0,RTL_CONSTANT_STRING(L"NtRollbackRegistryTransaction"),
	/*		377		*/	0,0,RTL_CONSTANT_STRING(L"NtRollbackTransaction"),
	/*		378		*/	0,0,RTL_CONSTANT_STRING(L"NtRollforwardTransactionManager"),
	/*		379		*/	0,0,RTL_CONSTANT_STRING(L"NtSaveKey"),
	/*		380		*/	0,0,RTL_CONSTANT_STRING(L"NtSaveKeyEx"),
	/*		381		*/	0,0,RTL_CONSTANT_STRING(L"NtSaveMergedKeys"),
	/*		382		*/	0,0,RTL_CONSTANT_STRING(L"NtSecureConnectPort"),
	/*		383		*/	0,0,RTL_CONSTANT_STRING(L"NtSerializeBoot"),
	/*		384		*/	0,0,RTL_CONSTANT_STRING(L"NtSetBootEntryOrder"),
	/*		385		*/	0,0,RTL_CONSTANT_STRING(L"NtSetBootOptions"),
	/*		386		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCachedSigningLevel"),
	/*		387		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCachedSigningLevel2"),
	/*		388		*/	0, DetourNtSetContextThread,RTL_CONSTANT_STRING(L"NtSetContextThread"),
	/*		389		*/	0,0,RTL_CONSTANT_STRING(L"NtSetDebugFilterState"),
	/*		390		*/	0,0,RTL_CONSTANT_STRING(L"NtSetDefaultHardErrorPort"),
	/*		391		*/	0,0,RTL_CONSTANT_STRING(L"NtSetDefaultLocale"),
	/*		392		*/	0,0,RTL_CONSTANT_STRING(L"NtSetDefaultUILanguage"),
	/*		393		*/	0,0,RTL_CONSTANT_STRING(L"NtSetDriverEntryOrder"),
	/*		394		*/	0,0,RTL_CONSTANT_STRING(L"NtSetEaFile"),
	/*		395		*/	0,0,RTL_CONSTANT_STRING(L"NtSetHighEventPair"),
	/*		396		*/	0,0,RTL_CONSTANT_STRING(L"NtSetHighWaitLowEventPair"),
	/*		397		*/	0,0,RTL_CONSTANT_STRING(L"NtSetIRTimer"),
	/*		398		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationDebugObject"),
	/*		399		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationEnlistment"),
	/*		400		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationJobObject"),
	/*		401		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationKey"),
	/*		402		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationResourceManager"),
	/*		403		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationSymbolicLink"),
	/*		404		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationToken"),
	/*		405		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationTransaction"),
	/*		406		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationTransactionManager"),
	/*		407		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationVirtualMemory"),
	/*		408		*/	0,0,RTL_CONSTANT_STRING(L"NtSetInformationWorkerFactory"),
	/*		409		*/	0,0,RTL_CONSTANT_STRING(L"NtSetIntervalProfile"),
	/*		410		*/	0,0,RTL_CONSTANT_STRING(L"NtSetIoCompletion"),
	/*		411		*/	0,0,RTL_CONSTANT_STRING(L"NtSetIoCompletionEx"),
	/*		412		*/	0,0,RTL_CONSTANT_STRING(L"NtSetLdtEntries"),
	/*		413		*/	0,0,RTL_CONSTANT_STRING(L"NtSetLowEventPair"),
	/*		414		*/	0,0,RTL_CONSTANT_STRING(L"NtSetLowWaitHighEventPair"),
	/*		415		*/	0,0,RTL_CONSTANT_STRING(L"NtSetQuotaInformationFile"),
	/*		416		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSecurityObject"),
	/*		417		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSystemEnvironmentValue"),
	/*		418		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSystemEnvironmentValueEx"),
	/*		419		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSystemInformation"),
	/*		420		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSystemPowerState"),
	/*		421		*/	0,0,RTL_CONSTANT_STRING(L"NtSetSystemTime"),
	/*		422		*/	0,0,RTL_CONSTANT_STRING(L"NtSetThreadExecutionState"),
	/*		423		*/	0,0,RTL_CONSTANT_STRING(L"NtSetTimer2"),
	/*		424		*/	0,0,RTL_CONSTANT_STRING(L"NtSetTimerEx"),
	/*		425		*/	0,0,RTL_CONSTANT_STRING(L"NtSetTimerResolution"),
	/*		426		*/	0,0,RTL_CONSTANT_STRING(L"NtSetUuidSeed"),
	/*		427		*/	0,0,RTL_CONSTANT_STRING(L"NtSetVolumeInformationFile"),
	/*		428		*/	0,0,RTL_CONSTANT_STRING(L"NtSetWnfProcessNotificationEvent"),
	/*		429		*/	0,0,RTL_CONSTANT_STRING(L"NtShutdownSystem"),
	/*		430		*/	0,0,RTL_CONSTANT_STRING(L"NtShutdownWorkerFactory"),
	/*		431		*/	0,0,RTL_CONSTANT_STRING(L"NtSignalAndWaitForSingleObject"),
	/*		432		*/	0,0,RTL_CONSTANT_STRING(L"NtSinglePhaseReject"),
	/*		433		*/	0,0,RTL_CONSTANT_STRING(L"NtStartProfile"),
	/*		434		*/	0,0,RTL_CONSTANT_STRING(L"NtStopProfile"),
	/*		435		*/	0,0,RTL_CONSTANT_STRING(L"NtSubscribeWnfStateChange"),
	/*		436		*/	0,0,RTL_CONSTANT_STRING(L"NtSuspendProcess"),
	/*		437		*/	0,0,RTL_CONSTANT_STRING(L"NtSuspendThread"),
	/*		438		*/	0,0,RTL_CONSTANT_STRING(L"NtSystemDebugControl"),
	/*		439		*/	0,0,RTL_CONSTANT_STRING(L"NtTerminateEnclave"),
	/*		440		*/	0,0,RTL_CONSTANT_STRING(L"NtTerminateJobObject"),
	/*		441		*/	0,0,RTL_CONSTANT_STRING(L"NtTestAlert"),
	/*		442		*/	0,0,RTL_CONSTANT_STRING(L"NtThawRegistry"),
	/*		443		*/	0,0,RTL_CONSTANT_STRING(L"NtThawTransactions"),
	/*		444		*/	0,0,RTL_CONSTANT_STRING(L"NtTraceControl"),
	/*		445		*/	0,0,RTL_CONSTANT_STRING(L"NtTranslateFilePath"),
	/*		446		*/	0,0,RTL_CONSTANT_STRING(L"NtUmsThreadYield"),
	/*		447		*/	0,0,RTL_CONSTANT_STRING(L"NtUnloadDriver"),
	/*		448		*/	0,0,RTL_CONSTANT_STRING(L"NtUnloadKey"),
	/*		449		*/	0,0,RTL_CONSTANT_STRING(L"NtUnloadKey2"),
	/*		450		*/	0,0,RTL_CONSTANT_STRING(L"NtUnloadKeyEx"),
	/*		451		*/	0,0,RTL_CONSTANT_STRING(L"NtUnlockFile"),
	/*		452		*/	0,0,RTL_CONSTANT_STRING(L"NtUnlockVirtualMemory"),
	/*		453		*/	0,0,RTL_CONSTANT_STRING(L"NtUnmapViewOfSectionEx"),
	/*		454		*/	0,0,RTL_CONSTANT_STRING(L"NtUnsubscribeWnfStateChange"),
	/*		455		*/	0,0,RTL_CONSTANT_STRING(L"NtUpdateWnfStateData"),
	/*		456		*/	0,0,RTL_CONSTANT_STRING(L"NtVdmControl"),
	/*		457		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForAlertByThreadId"),
	/*		458		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForDebugEvent"),
	/*		459		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForKeyedEvent"),
	/*		460		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitForWorkViaWorkerFactory"),
	/*		461		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitHighEventPair"),
	/*		462		*/	0,0,RTL_CONSTANT_STRING(L"NtWaitLowEventPair"),
};









//这是windows 10的shadow SSDT表的函数
FUN_INFO_ENTRY shadow_ssdt_fun_table_win10[] =
{
	/*		0		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetOwnerTransformedMonitorRect"),
	/*		1		*/	0,0,RTL_CONSTANT_STRING(L"NtUserYieldTask"),
	/*		2		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetSensorPresence"),
	/*		3		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetThreadState"),
	/*		4		*/	0,0,RTL_CONSTANT_STRING(L"NtUserPeekMessage"),
	/*		5		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallOneParam"),
	/*		6		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyState"),
	/*		7		*/	0,0,RTL_CONSTANT_STRING(L"NtUserInvalidateRect"),
	/*		8		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallNoParam"),
	/*		9		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetMessage"),
	/*		10		*/	0,0,RTL_CONSTANT_STRING(L"NtUserMessageCall"),
	/*		11		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBitBlt"),
	/*		12		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCharSet"),
	/*		13		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDC"),
	/*		14		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSelectBitmap"),
	/*		15		*/	0,0,RTL_CONSTANT_STRING(L"NtUserWaitMessage"),
	/*		16		*/	0,0,RTL_CONSTANT_STRING(L"NtUserTranslateMessage"),
	/*		17		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetProp"),
	/*		18		*/	0,0,RTL_CONSTANT_STRING(L"NtUserPostMessage"),
	/*		19		*/	0,0,RTL_CONSTANT_STRING(L"NtUserQueryWindow"),
	/*		20		*/	0,0,RTL_CONSTANT_STRING(L"NtUserTranslateAccelerator"),
	/*		21		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFlush"),
	/*		22		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRedrawWindow"),
	/*		23		*/	0,0,RTL_CONSTANT_STRING(L"NtUserWindowFromPoint"),
	/*		24		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallMsgFilter"),
	/*		25		*/	0,0,RTL_CONSTANT_STRING(L"NtUserValidateTimerCallback"),
	/*		26		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBeginPaint"),
	/*		27		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetTimer"),									//user mode user32.dll!settimer
	/*		28		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEndPaint"),
	/*		29		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCursor"),
	/*		30		*/	0,0,RTL_CONSTANT_STRING(L"NtUserKillTimer"),
	/*		31		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBuildHwndList"),
	/*		32		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSelectPalette"),
	/*		33		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallNextHookEx"),
	/*		34		*/	0,0,RTL_CONSTANT_STRING(L"NtUserHideCaret"),
	/*		35		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiIntersectClipRect"),
	/*		36		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndLock"),
	/*		37		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetProcessWindowStation"),
	/*		38		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDeleteObjectApp"),
	/*		39		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowPos"),
	/*		40		*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowCaret"),
	/*		41		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEndDeferWindowPosEx"),
	/*		42		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndParamLock"),
	/*		43		*/	0,0,RTL_CONSTANT_STRING(L"NtUserVkKeyScanEx"),
	/*		44		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetDIBitsToDeviceInternal"),
	/*		45		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallTwoParam"),
	/*		46		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetRandomRgn"),
	/*		47		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCopyAcceleratorTable"),
	/*		48		*/	0,0,RTL_CONSTANT_STRING(L"NtUserNotifyWinEvent"),
	/*		49		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtSelectClipRgn"),
	/*		50		*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsClipboardFormatAvailable"),
	/*		51		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetScrollInfo"),
	/*		52		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStretchBlt"),
	/*		53		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateCaret"),
	/*		54		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRectVisible"),
	/*		55		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCombineRgn"),
	/*		56		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDCObject"),
	/*		57		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDispatchMessage"),
	/*		58		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterWindowMessage"),
	/*		59		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtTextOutW"),
	/*		60		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSelectFont"),
	/*		61		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRestoreDC"),
	/*		62		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSaveDC"),
	/*		63		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetForegroundWindow"),
	/*		64		*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowScrollBar"),
	/*		65		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFindExistingCursorIcon"),
	/*		66		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDCDword"),
	/*		67		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetRegionData"),
	/*		68		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiLineTo"),
	/*		69		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSystemParametersInfo"),
	/*		70		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetAppClipBox"),
	/*		71		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAsyncKeyState"),
	/*		72		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCPD"),
	/*		73		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoveProp"),
	/*		74		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDoPalette"),
	/*		75		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPolyPolyDraw"),
	/*		76		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCapture"),
	/*		77		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnumDisplayMonitors"),
	/*		78		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateCompatibleBitmap"),
	/*		79		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProp"),
	/*		80		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTextCharsetInfo"),
	/*		81		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSBGetParms"),
	/*		82		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetIconInfo"),
	/*		83		*/	0,0,RTL_CONSTANT_STRING(L"NtUserExcludeUpdateRgn"),
	/*		84		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetFocus"),
	/*		85		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtGetObjectW"),
	/*		86		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetUpdateRect"),
	/*		87		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateCompatibleDC"),
	/*		88		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardSequenceNumber"),
	/*		89		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreatePen"),
	/*		90		*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowWindow"),
	/*		91		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyboardLayoutList"),
	/*		92		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPatBlt"),
	/*		93		*/	0,0,RTL_CONSTANT_STRING(L"NtUserMapVirtualKeyEx"),
	/*		94		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowLong"),
	/*		95		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiHfontCreate"),
	/*		96		*/	0,0,RTL_CONSTANT_STRING(L"NtUserMoveWindow"),
	/*		97		*/	0,0,RTL_CONSTANT_STRING(L"NtUserPostThreadMessage"),
	/*		98		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDrawIconEx"),
	/*		99		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetSystemMenu"),
	/*		100		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDrawStream"),
	/*		101		*/	0,0,RTL_CONSTANT_STRING(L"NtUserInternalGetWindowText"),
	/*		102		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowDC"),
	/*		103		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiInvertRgn"),
	/*		104		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetRgnBox"),
	/*		105		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetAndSetDCDword"),
	/*		106		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMaskBlt"),
	/*		107		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetWidthTable"),
	/*		108		*/	0,0,RTL_CONSTANT_STRING(L"NtUserScrollDC"),
	/*		109		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetObjectInformation"),
	/*		110		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateBitmap"),
	/*		111		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFindWindowEx"),
	/*		112		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPolyPatBlt"),
	/*		113		*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnhookWindowsHookEx"),
	/*		114		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetNearestColor"),
	/*		115		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiTransformPoints"),
	/*		116		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDCPoint"),
	/*		117		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateDIBBrush"),
	/*		118		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTextMetricsW"),
	/*		119		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateWindowEx"),
	/*		120		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetParent"),
	/*		121		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyboardState"),
	/*		122		*/	0,0,RTL_CONSTANT_STRING(L"NtUserToUnicodeEx"),
	/*		123		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetControlBrush"),
	/*		124		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClassName"),
	/*		125		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAlphaBlend"),
	/*		126		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiOffsetRgn"),
	/*		127		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDefSetText"),
	/*		128		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTextFaceW"),
	/*		129		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStretchDIBitsInternal"),
	/*		130		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSendInput"),
	/*		131		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetThreadDesktop"),
	/*		132		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateRectRgn"),
	/*		133		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDIBitsInternal"),
	/*		134		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetUpdateRgn"),
	/*		135		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDeleteClientObj"),
	/*		136		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetIconSize"),
	/*		137		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFillWindow"),
	/*		138		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtCreateRegion"),
	/*		139		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiComputeXformCoefficients"),
	/*		140		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowsHookEx"),
	/*		141		*/	0,0,RTL_CONSTANT_STRING(L"NtUserNotifyProcessCreate"),
	/*		142		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUnrealizeObject"),
	/*		143		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetTitleBarInfo"),
	/*		144		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRectangle"),
	/*		145		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetThreadDesktop"),
	/*		146		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDCEx"),
	/*		147		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetScrollBarInfo"),
	/*		148		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTextExtent"),
	/*		149		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowFNID"),
	/*		150		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetLayout"),
	/*		151		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCalcMenuBar"),
	/*		152		*/	0,0,RTL_CONSTANT_STRING(L"NtUserThunkedMenuItemInfo"),
	/*		153		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExcludeClipRect"),
	/*		154		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateDIBSection"),
	/*		155		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDCforBitmap"),
	/*		156		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyCursor"),
	/*		157		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyWindow"),
	/*		158		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndParam"),
	/*		159		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateDIBitmapInternal"),
	/*		160		*/	0,0,RTL_CONSTANT_STRING(L"NtUserOpenWindowStation"),
	/*		161		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCursorIconData"),
	/*		162		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCloseDesktop"),
	/*		163		*/	0,0,RTL_CONSTANT_STRING(L"NtUserOpenDesktop"),
	/*		164		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProcessWindowStation"),
	/*		165		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAtomName"),
	/*		166		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtCreatePen"),
	/*		167		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreatePaletteInternal"),
	/*		168		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBrushOrg"),
	/*		169		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBuildNameList"),
	/*		170		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetPixel"),
	/*		171		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterClassExWOW"),
	/*		172		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreatePatternBrushInternal"),
	/*		173		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAncestor"),
	/*		174		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetOutlineTextMetricsInternalW"),
	/*		175		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBitmapBits"),
	/*		176		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCloseWindowStation"),
	/*		177		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDoubleClickTime"),
	/*		178		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableScrollBar"),
	/*		179		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateSolidBrush"),
	/*		180		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClassInfoEx"),
	/*		181		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateClientObj"),
	/*		182		*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnregisterClass"),
	/*		183		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDeleteMenu"),
	/*		184		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRectInRegion"),
	/*		185		*/	0,0,RTL_CONSTANT_STRING(L"NtUserScrollWindowEx"),
	/*		186		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPixel"),
	/*		187		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetClassLong"),
	/*		188		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetMenuBarInfo"),
	/*		189		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetNearestPaletteIndex"),
	/*		190		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCharWidthW"),
	/*		191		*/	0,0,RTL_CONSTANT_STRING(L"NtUserInvalidateRgn"),
	/*		192		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardOwner"),
	/*		193		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowRgn"),
	/*		194		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBitBltSysBmp"),
	/*		195		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCharWidthInfo"),
	/*		196		*/	0,0,RTL_CONSTANT_STRING(L"NtUserValidateRect"),
	/*		197		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCloseClipboard"),
	/*		198		*/	0,0,RTL_CONSTANT_STRING(L"NtUserOpenClipboard"),
	/*		199		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetClipboardData"),
	/*		200		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableMenuItem"),
	/*		201		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAlterWindowStyle"),
	/*		202		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFillRgn"),
	/*		203		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowPlacement"),
	/*		204		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiModifyWorldTransform"),
	/*		205		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetFontData"),
	/*		206		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetOpenClipboardWindow"),
	/*		207		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetThreadState"),
	/*		208		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiOpenDCW"),
	/*		209		*/	0,0,RTL_CONSTANT_STRING(L"NtUserTrackMouseEvent"),
	/*		210		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTransform"),
	/*		211		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyMenu"),
	/*		212		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetBitmapBits"),
	/*		213		*/	0,0,RTL_CONSTANT_STRING(L"NtUserConsoleControl"),
	/*		214		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetActiveWindow"),
	/*		215		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetInformationThread"),
	/*		216		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowPlacement"),
	/*		217		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetControlColor"),
	/*		218		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetMetaRgn"),
	/*		219		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetMiterLimit"),
	/*		220		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetVirtualResolution"),
	/*		221		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetRasterizerCaps"),
	/*		222		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowWord"),
	/*		223		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardFormatName"),
	/*		224		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRealInternalGetMessage"),
	/*		225		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateLocalMemHandle"),
	/*		226		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAttachThreadInput"),
	/*		227		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateHalftonePalette"),
	/*		228		*/	0,0,RTL_CONSTANT_STRING(L"NtUserPaintMenuBar"),
	/*		229		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetKeyboardState"),
	/*		230		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCombineTransform"),
	/*		231		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateAcceleratorTable"),
	/*		232		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCursorFrameInfo"),
	/*		233		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAltTabInfo"),
	/*		234		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCaretBlinkTime"),
	/*		235		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiQueryFontAssocInfo"),
	/*		236		*/	0,0,RTL_CONSTANT_STRING(L"NtUserProcessConnect"),
	/*		237		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnumDisplayDevices"),
	/*		238		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEmptyClipboard"),
	/*		239		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardData"),
	/*		240		*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoveMenu"),
	/*		241		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBoundsRect"),
	/*		242		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetBitmapDimension"),
	/*		243		*/	0,0,RTL_CONSTANT_STRING(L"NtUserConvertMemHandle"),
	/*		244		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyAcceleratorTable"),
	/*		245		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetGUIThreadInfo"),
	/*		246		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCloseFigure"),
	/*		247		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowsHookAW"),
	/*		248		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetMenuDefaultItem"),
	/*		249		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCheckMenuItem"),
	/*		250		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWinEventHook"),
	/*		251		*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnhookWinEvent"),
	/*		252		*/	0,0,RTL_CONSTANT_STRING(L"NtUserLockWindowUpdate"),
	/*		253		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetSystemMenu"),
	/*		254		*/	0,0,RTL_CONSTANT_STRING(L"NtUserThunkedMenuInfo"),
	/*		255		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBeginPath"),
	/*		256		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEndPath"),
	/*		257		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFillPath"),
	/*		258		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwnd"),
	/*		259		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDdeInitialize"),
	/*		260		*/	0,0,RTL_CONSTANT_STRING(L"NtUserModifyUserStartupInfoFlags"),
	/*		261		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCountClipboardFormats"),
	/*		262		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddFontMemResourceEx"),
	/*		263		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEqualRgn"),
	/*		264		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetSystemPaletteUse"),
	/*		265		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRemoveFontMemResourceEx"),
	/*		266		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnumDisplaySettings"),
	/*		267		*/	0,0,RTL_CONSTANT_STRING(L"NtUserPaintDesktop"),
	/*		268		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtEscape"),
	/*		269		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBitmapDimension"),
	/*		270		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetFontEnumeration"),
	/*		271		*/	0,0,RTL_CONSTANT_STRING(L"NtUserChangeClipboardChain"),
	/*		272		*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetClipboardViewer"),
	/*		273		*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowWindowAsync"),
	/*		274		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateColorSpace"),
	/*		275		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDeleteColorSpace"),
	/*		276		*/	0,0,RTL_CONSTANT_STRING(L"NtUserActivateKeyboardLayout"),
	/*		277		*/	0,0,RTL_CONSTANT_STRING(L"NtBindCompositionSurface"),
	/*		278		*/	0,0,RTL_CONSTANT_STRING(L"NtCloseCompositionInputSink"),
	/*		279		*/	0,0,RTL_CONSTANT_STRING(L"NtCompositionInputThread"),
	/*		280		*/	0,0,RTL_CONSTANT_STRING(L"NtCompositionSetDropTarget"),
	/*		281		*/	0,0,RTL_CONSTANT_STRING(L"NtConfigureInputSpace"),
	/*		282		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateCompositionInputSink"),
	/*		283		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateCompositionSurfaceHandle"),
	/*		284		*/	0,0,RTL_CONSTANT_STRING(L"NtCreateImplicitCompositionInputSink"),
	/*		285		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionAddCrossDeviceVisualChild"),
	/*		286		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionBeginFrame"),
	/*		287		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCommitChannel"),
	/*		288		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCommitSynchronizationObject"),
	/*		289		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionConfirmFrame"),
	/*		290		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionConnectPipe"),
	/*		291		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateAndBindSharedSection"),
	/*		292		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateChannel"),
	/*		293		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateConnection"),
	/*		294		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateDwmChannel"),
	/*		295		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateSharedVisualHandle"),
	/*		296		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionCreateSynchronizationObject"),
	/*		297		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionDestroyChannel"),
	/*		298		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionDestroyConnection"),
	/*		299		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionDiscardFrame"),
	/*		300		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionDuplicateHandleToProcess"),
	/*		301		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionDuplicateSwapchainHandleToDwm"),
	/*		302		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionEnableMMCSS"),
	/*		303		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetBatchId"),
	/*		304		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetChannels"),
	/*		305		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetConnectionBatch"),
	/*		306		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetDeletedResources"),
	/*		307		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetFrameLegacyTokens"),
	/*		308		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetFrameStatistics"),
	/*		309		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetFrameSurfaceUpdates"),
	/*		310		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionGetMaterialProperty"),
	/*		311		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionProcessChannelBatchBuffer"),
	/*		312		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionReferenceSharedResourceOnDwmChannel"),
	/*		313		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionRegisterThumbnailVisual"),
	/*		314		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionRegisterVirtualDesktopVisual"),
	/*		315		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionReleaseAllResources"),
	/*		316		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionRemoveCrossDeviceVisualChild"),
	/*		317		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionRetireFrame"),
	/*		318		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSetChannelCommitCompletionEvent"),
	/*		319		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSetChannelConnectionId"),
	/*		320		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSetChildRootVisual"),
	/*		321		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSetDebugCounter"),
	/*		322		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSetMaterialProperty"),
	/*		323		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSubmitDWMBatch"),
	/*		324		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSuspendAnimations"),
	/*		325		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionSynchronize"),
	/*		326		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryAnimationScenarioBegin"),
	/*		327		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryAnimationScenarioReference"),
	/*		328		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryAnimationScenarioUnreference"),
	/*		329		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetrySetApplicationId"),
	/*		330		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryTouchInteractionBegin"),
	/*		331		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryTouchInteractionEnd"),
	/*		332		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionTelemetryTouchInteractionUpdate"),
	/*		333		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionUpdatePointerCapture"),
	/*		334		*/	0,0,RTL_CONSTANT_STRING(L"NtDCompositionWaitForChannel"),
	/*		335		*/	0,0,RTL_CONSTANT_STRING(L"NtDesktopCaptureBits"),
	/*		336		*/	0,0,RTL_CONSTANT_STRING(L"NtDuplicateCompositionInputSink"),
	/*		337		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkCreateTrackedWorkload"),
	/*		338		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkDestroyTrackedWorkload"),
	/*		339		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkEndTrackedWorkload"),
	/*		340		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkGetAvailableTrackedWorkloadIndex"),
	/*		341		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkGetProcessList"),
	/*		342		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkGetTrackedWorkloadStatistics"),
	/*		343		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkRegisterVailProcess"),
	/*		344		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkResetTrackedWorkload"),
	/*		345		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkSubmitPresentBltToHwQueue"),
	/*		346		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkSubmitPresentToHwQueue"),
	/*		347		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkUpdateTrackedWorkload"),
	/*		348		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkVailConnect"),
	/*		349		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkVailDisconnect"),
	/*		350		*/	0,0,RTL_CONSTANT_STRING(L"NtDxgkVailPromoteCompositionSurface"),
	/*		351		*/	0,0,RTL_CONSTANT_STRING(L"NtEnableOneCoreTransformMode"),
	/*		352		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectAddContent"),
	/*		353		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectAddPoolBuffer"),
	/*		354		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerAcquirePresent"),
	/*		355		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerAdjustUsageReference"),
	/*		356		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerBeginProcessPresent"),
	/*		357		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerEndProcessPresent"),
	/*		358		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerPostMessage"),
	/*		359		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectConsumerQueryBufferInfo"),
	/*		360		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectCreate"),
	/*		361		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectDisconnectEndpoint"),
	/*		362		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectOpen"),
	/*		363		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectPresentCancel"),
	/*		364		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectQueryBufferAvailableEvent"),
	/*		365		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectQueryEndpointConnected"),
	/*		366		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectQueryNextMessageToProducer"),
	/*		367		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectReadNextMessageToProducer"),
	/*		368		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectRemoveContent"),
	/*		369		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectRemovePoolBuffer"),
	/*		370		*/	0,0,RTL_CONSTANT_STRING(L"NtFlipObjectSetContent"),
	/*		371		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAbortDoc"),
	/*		372		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAbortPath"),
	/*		373		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddEmbFontToDC"),
	/*		374		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddFontResourceW"),
	/*		375		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddInitialFonts"),
	/*		376		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddRemoteFontToDC"),
	/*		377		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAddRemoteMMInstanceToDC"),
	/*		378		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAngleArc"),
	/*		379		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiAnyLinkedFonts"),
	/*		380		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiArcInternal"),
	/*		381		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBRUSHOBJ_DeleteRbrush"),
	/*		382		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBRUSHOBJ_hGetColorTransform"),
	/*		383		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBRUSHOBJ_pvAllocRbrush"),
	/*		384		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBRUSHOBJ_pvGetRbrush"),
	/*		385		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBRUSHOBJ_ulGetBrushColor"),
	/*		386		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiBeginGdiRendering"),
	/*		387		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCLIPOBJ_bEnum"),
	/*		388		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCLIPOBJ_cEnumStart"),
	/*		389		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCLIPOBJ_ppoGetPath"),
	/*		390		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCancelDC"),
	/*		391		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiChangeGhostFont"),
	/*		392		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCheckBitmapBits"),
	/*		393		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiClearBitmapAttributes"),
	/*		394		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiClearBrushAttributes"),
	/*		395		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiColorCorrectPalette"),
	/*		396		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiConfigureOPMProtectedOutput"),
	/*		397		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiConvertMetafileRect"),
	/*		398		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateBitmapFromDxSurface"),
	/*		399		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateBitmapFromDxSurface2"),
	/*		400		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateColorTransform"),
	/*		401		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateEllipticRgn"),
	/*		402		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateHatchBrushInternal"),
	/*		403		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateMetafileDC"),
	/*		404		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateOPMProtectedOutput"),
	/*		405		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateOPMProtectedOutputs"),
	/*		406		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateRoundRectRgn"),
	/*		407		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateServerMetaFile"),
	/*		408		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiCreateSessionMappedDIBSection"),
	/*		409		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCIGetCapabilitiesString"),
	/*		410		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCIGetCapabilitiesStringLength"),
	/*		411		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCIGetTimingReport"),
	/*		412		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCIGetVCPFeature"),
	/*		413		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCISaveCurrentSettings"),
	/*		414		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDDCCISetVCPFeature"),
	/*		415		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdCreateFullscreenSprite"),
	/*		416		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAbandonSwapChain"),
	/*		417		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAcquireKeyedMutex"),
	/*		418		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAcquireKeyedMutex2"),
	/*		419		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAcquireSwapChain"),
	/*		420		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAddSurfaceToSwapChain"),
	/*		421		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIAdjustFullscreenGamma"),
	/*		422		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICacheHybridQueryValue"),
	/*		423		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIChangeVideoMemoryReservation"),
	/*		424		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckExclusiveOwnership"),
	/*		425		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckMonitorPowerState"),
	/*		426		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckMultiPlaneOverlaySupport"),
	/*		427		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckMultiPlaneOverlaySupport2"),
	/*		428		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckMultiPlaneOverlaySupport3"),
	/*		429		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckOcclusion"),
	/*		430		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckSharedResourceAccess"),
	/*		431		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICheckVidPnExclusiveOwnership"),
	/*		432		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICloseAdapter"),
	/*		433		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIConfigureSharedResource"),
	/*		434		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateAllocation"),
	/*		435		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateBundleObject"),
	/*		436		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateContext"),
	/*		437		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateContextVirtual"),
	/*		438		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateDCFromMemory"),
	/*		439		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateDevice"),
	/*		440		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateHwContext"),
	/*		441		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateHwQueue"),
	/*		442		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateKeyedMutex"),
	/*		443		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateKeyedMutex2"),
	/*		444		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateOutputDupl"),
	/*		445		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateOverlay"),
	/*		446		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreatePagingQueue"),
	/*		447		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateProtectedSession"),
	/*		448		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateSwapChain"),
	/*		449		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDICreateSynchronizationObject"),
	/*		450		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDDisplayEnum"),
	/*		451		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyAllocation"),
	/*		452		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyAllocation2"),
	/*		453		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyContext"),
	/*		454		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyDCFromMemory"),
	/*		455		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyDevice"),
	/*		456		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyHwContext"),
	/*		457		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyHwQueue"),
	/*		458		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyKeyedMutex"),
	/*		459		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyOutputDupl"),
	/*		460		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyOverlay"),
	/*		461		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyPagingQueue"),
	/*		462		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroyProtectedSession"),
	/*		463		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDestroySynchronizationObject"),
	/*		464		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDispMgrCreate"),
	/*		465		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDispMgrSourceOperation"),
	/*		466		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIDispMgrTargetOperation"),
	/*		467		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIEnumAdapters"),
	/*		468		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIEnumAdapters2"),
	/*		469		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIEscape"),
	/*		470		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIEvict"),
	/*		471		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIExtractBundleObject"),
	/*		472		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIFlipOverlay"),
	/*		473		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIFlushHeapTransitions"),
	/*		474		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIFreeGpuVirtualAddress"),
	/*		475		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetAllocationPriority"),
	/*		476		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetCachedHybridQueryValue"),
	/*		477		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetContextInProcessSchedulingPriority"),
	/*		478		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetContextSchedulingPriority"),
	/*		479		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetDWMVerticalBlankEvent"),
	/*		480		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetDeviceState"),
	/*		481		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetDisplayModeList"),
	/*		482		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetMemoryBudgetTarget"),
	/*		483		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetMultiPlaneOverlayCaps"),
	/*		484		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetMultisampleMethodList"),
	/*		485		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetOverlayState"),
	/*		486		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetPostCompositionCaps"),
	/*		487		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetPresentHistory"),
	/*		488		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetPresentQueueEvent"),
	/*		489		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetProcessDeviceRemovalSupport"),
	/*		490		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetProcessSchedulingPriorityBand"),
	/*		491		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetProcessSchedulingPriorityClass"),
	/*		492		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetResourcePresentPrivateDriverData"),
	/*		493		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetRuntimeData"),
	/*		494		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetScanLine"),
	/*		495		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetSetSwapChainMetadata"),
	/*		496		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetSharedPrimaryHandle"),
	/*		497		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetSharedResourceAdapterLuid"),
	/*		498		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetSharedResourceAdapterLuidFlipManager"),
	/*		499		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIGetYieldPercentage"),
	/*		500		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIInvalidateActiveVidPn"),
	/*		501		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIInvalidateCache"),
	/*		502		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDILock"),
	/*		503		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDILock2"),
	/*		504		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIMakeResident"),
	/*		505		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIMapGpuVirtualAddress"),
	/*		506		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIMarkDeviceAsError"),
	/*		507		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispGetNextChunkInfo"),
	/*		508		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispQueryMiracastDisplayDeviceStatus"),
	/*		509		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispQueryMiracastDisplayDeviceSupport"),
	/*		510		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispStartMiracastDisplayDevice"),
	/*		511		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispStopMiracastDisplayDevice"),
	/*		512		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDINetDispStopSessions"),
	/*		513		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOfferAllocations"),
	/*		514		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenAdapterFromDeviceName"),
	/*		515		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenAdapterFromHdc"),
	/*		516		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenAdapterFromLuid"),
	/*		517		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenBundleObjectNtHandleFromName"),
	/*		518		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenKeyedMutex"),
	/*		519		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenKeyedMutex2"),
	/*		520		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenKeyedMutexFromNtHandle"),
	/*		521		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenNtHandleFromName"),
	/*		522		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenProtectedSessionFromNtHandle"),
	/*		523		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenResource"),
	/*		524		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenResourceFromNtHandle"),
	/*		525		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenSwapChain"),
	/*		526		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenSyncObjectFromNtHandle"),
	/*		527		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenSyncObjectFromNtHandle2"),
	/*		528		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenSyncObjectNtHandleFromName"),
	/*		529		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOpenSynchronizationObject"),
	/*		530		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOutputDuplGetFrameInfo"),
	/*		531		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOutputDuplGetMetaData"),
	/*		532		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOutputDuplGetPointerShapeData"),
	/*		533		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOutputDuplPresent"),
	/*		534		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIOutputDuplReleaseFrame"),
	/*		535		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPinDirectFlipResources"),
	/*		536		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPollDisplayChildren"),
	/*		537		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPresent"),
	/*		538		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPresentMultiPlaneOverlay"),
	/*		539		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPresentMultiPlaneOverlay2"),
	/*		540		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPresentMultiPlaneOverlay3"),
	/*		541		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIPresentRedirected"),
	/*		542		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryAdapterInfo"),
	/*		543		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryAllocationResidency"),
	/*		544		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryClockCalibration"),
	/*		545		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryFSEBlock"),
	/*		546		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryProcessOfferInfo"),
	/*		547		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryProtectedSessionInfoFromNtHandle"),
	/*		548		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryProtectedSessionStatus"),
	/*		549		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryRemoteVidPnSourceFromGdiDisplayName"),
	/*		550		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryResourceInfo"),
	/*		551		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryResourceInfoFromNtHandle"),
	/*		552		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryStatistics"),
	/*		553		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryVidPnExclusiveOwnership"),
	/*		554		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIQueryVideoMemoryInfo"),
	/*		555		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReclaimAllocations"),
	/*		556		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReclaimAllocations2"),
	/*		557		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReleaseKeyedMutex"),
	/*		558		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReleaseKeyedMutex2"),
	/*		559		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReleaseProcessVidPnSourceOwners"),
	/*		560		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReleaseSwapChain"),
	/*		561		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIRemoveSurfaceFromSwapChain"),
	/*		562		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIRender"),
	/*		563		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIReserveGpuVirtualAddress"),
	/*		564		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetAllocationPriority"),
	/*		565		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetContextInProcessSchedulingPriority"),
	/*		566		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetContextSchedulingPriority"),
	/*		567		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetDisplayMode"),
	/*		568		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetDisplayPrivateDriverFormat"),
	/*		569		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetDodIndirectSwapchain"),
	/*		570		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetFSEBlock"),
	/*		571		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetGammaRamp"),
	/*		572		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetHwProtectionTeardownRecovery"),
	/*		573		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetMemoryBudgetTarget"),
	/*		574		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetMonitorColorSpaceTransform"),
	/*		575		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetProcessDeviceRemovalSupport"),
	/*		576		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetProcessSchedulingPriorityBand"),
	/*		577		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetProcessSchedulingPriorityClass"),
	/*		578		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetQueuedLimit"),
	/*		579		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetStablePowerState"),
	/*		580		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetStereoEnabled"),
	/*		581		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetSyncRefreshCountWaitTarget"),
	/*		582		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetVidPnSourceHwProtection"),
	/*		583		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetVidPnSourceOwner"),
	/*		584		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISetYieldPercentage"),
	/*		585		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIShareObjects"),
	/*		586		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISharedPrimaryLockNotification"),
	/*		587		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISharedPrimaryUnLockNotification"),
	/*		588		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISignalSynchronizationObject"),
	/*		589		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISignalSynchronizationObjectFromCpu"),
	/*		590		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISignalSynchronizationObjectFromGpu"),
	/*		591		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISignalSynchronizationObjectFromGpu2"),
	/*		592		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISubmitCommand"),
	/*		593		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISubmitCommandToHwQueue"),
	/*		594		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISubmitSignalSyncObjectsToHwQueue"),
	/*		595		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDISubmitWaitForSyncObjectsToHwQueue"),
	/*		596		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDITrimProcessCommitment"),
	/*		597		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUnOrderedPresentSwapChain"),
	/*		598		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUnlock"),
	/*		599		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUnlock2"),
	/*		600		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUnpinDirectFlipResources"),
	/*		601		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUpdateAllocationProperty"),
	/*		602		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUpdateGpuVirtualAddress"),
	/*		603		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIUpdateOverlay"),
	/*		604		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForIdle"),
	/*		605		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForSynchronizationObject"),
	/*		606		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForSynchronizationObjectFromCpu"),
	/*		607		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForSynchronizationObjectFromGpu"),
	/*		608		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForVerticalBlankEvent"),
	/*		609		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDDIWaitForVerticalBlankEvent2"),
	/*		610		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdDestroyFullscreenSprite"),
	/*		611		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdNotifyFullscreenSpriteUpdate"),
	/*		612		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDdQueryVisRgnUniqueness"),
	/*		613		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDeleteColorTransform"),
	/*		614		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDescribePixelFormat"),
	/*		615		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDestroyOPMProtectedOutput"),
	/*		616		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDestroyPhysicalMonitor"),
	/*		617		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDoBanding"),
	/*		618		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDrawEscape"),
	/*		619		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiDwmCreatedBitmapRemotingOutput"),
	/*		620		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEllipse"),
	/*		621		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEnableEudc"),
	/*		622		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEndDoc"),
	/*		623		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEndGdiRendering"),
	/*		624		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEndPage"),
	/*		625		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngAlphaBlend"),
	/*		626		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngAssociateSurface"),
	/*		627		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngBitBlt"),
	/*		628		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCheckAbort"),
	/*		629		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngComputeGlyphSet"),
	/*		630		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCopyBits"),
	/*		631		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCreateBitmap"),
	/*		632		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCreateClip"),
	/*		633		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCreateDeviceBitmap"),
	/*		634		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCreateDeviceSurface"),
	/*		635		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngCreatePalette"),
	/*		636		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngDeleteClip"),
	/*		637		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngDeletePalette"),
	/*		638		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngDeletePath"),
	/*		639		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngDeleteSurface"),
	/*		640		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngEraseSurface"),
	/*		641		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngFillPath"),
	/*		642		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngGradientFill"),
	/*		643		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngLineTo"),
	/*		644		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngLockSurface"),
	/*		645		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngMarkBandingSurface"),
	/*		646		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngPaint"),
	/*		647		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngPlgBlt"),
	/*		648		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngStretchBlt"),
	/*		649		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngStretchBltROP"),
	/*		650		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngStrokeAndFillPath"),
	/*		651		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngStrokePath"),
	/*		652		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngTextOut"),
	/*		653		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngTransparentBlt"),
	/*		654		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEngUnlockSurface"),
	/*		655		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEnsureDpiDepDefaultGuiFontForPlateau"),
	/*		656		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEnumFonts"),
	/*		657		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEnumObjects"),
	/*		658		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiEudcLoadUnloadLink"),
	/*		659		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiExtFloodFill"),
	/*		660		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_cGetAllGlyphHandles"),
	/*		661		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_cGetGlyphs"),
	/*		662		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_pQueryGlyphAttrs"),
	/*		663		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_pfdg"),
	/*		664		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_pifi"),
	/*		665		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_pvTrueTypeFontFile"),
	/*		666		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_pxoGetXform"),
	/*		667		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFONTOBJ_vGetInfo"),
	/*		668		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFlattenPath"),
	/*		669		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFontIsLinked"),
	/*		670		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiForceUFIMapping"),
	/*		671		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFrameRgn"),
	/*		672		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiFullscreenControl"),
	/*		673		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetAppliedDeviceGammaRamp"),
	/*		674		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetBitmapDpiScaleValue"),
	/*		675		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetBoundsRect"),
	/*		676		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCOPPCompatibleOPMInformation"),
	/*		677		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCertificate"),
	/*		678		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCertificateByHandle"),
	/*		679		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCertificateSize"),
	/*		680		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCertificateSizeByHandle"),
	/*		681		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCharABCWidthsW"),
	/*		682		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCharacterPlacementW"),
	/*		683		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetColorAdjustment"),
	/*		684		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetColorSpaceforBitmap"),
	/*		685		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetCurrentDpiInfo"),
	/*		686		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDCDpiScaleValue"),
	/*		687		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDeviceCaps"),
	/*		688		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDeviceCapsAll"),
	/*		689		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDeviceGammaRamp"),
	/*		690		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDeviceWidth"),
	/*		691		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetDhpdev"),
	/*		692		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetETM"),
	/*		693		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetEmbUFI"),
	/*		694		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetEmbedFonts"),
	/*		695		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetEntry"),
	/*		696		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetEudcTimeStampEx"),
	/*		697		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetFontFileData"),
	/*		698		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetFontFileInfo"),
	/*		699		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetFontResourceInfoInternalW"),
	/*		700		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetFontUnicodeRanges"),
	/*		701		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetGammaRampCapability"),
	/*		702		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetGlyphIndicesW"),
	/*		703		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetGlyphIndicesWInternal"),
	/*		704		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetGlyphOutline"),
	/*		705		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetKerningPairs"),
	/*		706		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetLinkedUFIs"),
	/*		707		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetMiterLimit"),
	/*		708		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetMonitorID"),
	/*		709		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetNumberOfPhysicalMonitors"),
	/*		710		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetOPMInformation"),
	/*		711		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetOPMRandomNumber"),
	/*		712		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetObjectBitmapHandle"),
	/*		713		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPath"),
	/*		714		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPerBandInfo"),
	/*		715		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPhysicalMonitorDescription"),
	/*		716		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPhysicalMonitors"),
	/*		717		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetProcessSessionFonts"),
	/*		718		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetPublicFontTableChangeCookie"),
	/*		719		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetRealizationInfo"),
	/*		720		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetServerMetaFileBits"),
	/*		721		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetSpoolMessage"),
	/*		722		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetStats"),
	/*		723		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetStringBitmapW"),
	/*		724		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetSuggestedOPMProtectedOutputArraySize"),
	/*		725		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetTextExtentExW"),
	/*		726		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetUFI"),
	/*		727		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGetUFIPathname"),
	/*		728		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiGradientFill"),
	/*		729		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiHLSurfGetInformation"),
	/*		730		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiHLSurfSetInformation"),
	/*		731		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiHT_Get8BPPFormatPalette"),
	/*		732		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiHT_Get8BPPMaskPalette"),
	/*		733		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiIcmBrushInfo"),
	/*		734		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiInit"),
	/*		735		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiInitSpool"),
	/*		736		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMakeFontDir"),
	/*		737		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMakeInfoDC"),
	/*		738		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMakeObjectUnXferable"),
	/*		739		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMakeObjectXferable"),
	/*		740		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMirrorWindowOrg"),
	/*		741		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMonoBitmap"),
	/*		742		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiMoveTo"),
	/*		743		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiOffsetClipRgn"),
	/*		744		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPATHOBJ_bEnum"),
	/*		745		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPATHOBJ_bEnumClipLines"),
	/*		746		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPATHOBJ_vEnumStart"),
	/*		747		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPATHOBJ_vEnumStartClipLines"),
	/*		748		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPATHOBJ_vGetBounds"),
	/*		749		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPathToRegion"),
	/*		750		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPlgBlt"),
	/*		751		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPolyDraw"),
	/*		752		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPolyTextOutW"),
	/*		753		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPtInRegion"),
	/*		754		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiPtVisible"),
	/*		755		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiQueryFonts"),
	/*		756		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRemoveFontResourceW"),
	/*		757		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRemoveMergeFont"),
	/*		758		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiResetDC"),
	/*		759		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiResizePalette"),
	/*		760		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiRoundRect"),
	/*		761		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSTROBJ_bEnum"),
	/*		762		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSTROBJ_bEnumPositionsOnly"),
	/*		763		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSTROBJ_bGetAdvanceWidths"),
	/*		764		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSTROBJ_dwGetCodePage"),
	/*		765		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSTROBJ_vEnumStart"),
	/*		766		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiScaleRgn"),
	/*		767		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiScaleValues"),
	/*		768		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiScaleViewportExtEx"),
	/*		769		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiScaleWindowExtEx"),
	/*		770		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSelectBrush"),
	/*		771		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSelectClipPath"),
	/*		772		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSelectPen"),
	/*		773		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBitmapAttributes"),
	/*		774		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetBrushAttributes"),
	/*		775		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetColorAdjustment"),
	/*		776		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetColorSpace"),
	/*		777		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetDeviceGammaRamp"),
	/*		778		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetFontXform"),
	/*		779		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetIcmMode"),
	/*		780		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetLinkedUFIs"),
	/*		781		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetMagicColors"),
	/*		782		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetOPMSigningKeyAndSequenceNumbers"),
	/*		783		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetPUMPDOBJ"),
	/*		784		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetPixelFormat"),
	/*		785		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetPrivateDeviceGammaRamp"),
	/*		786		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetRectRgn"),
	/*		787		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetSizeDevice"),
	/*		788		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetSystemPaletteUse"),
	/*		789		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetTextJustification"),
	/*		790		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSetUMPDSandboxState"),
	/*		791		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStartDoc"),
	/*		792		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStartPage"),
	/*		793		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStrokeAndFillPath"),
	/*		794		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiStrokePath"),
	/*		795		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiSwapBuffers"),
	/*		796		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiTransparentBlt"),
	/*		797		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUMPDEngFreeUserMem"),
	/*		798		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUnloadPrinterDriver"),
	/*		799		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUnmapMemFont"),
	/*		800		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUpdateColors"),
	/*		801		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiUpdateTransform"),
	/*		802		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiWidenPath"),
	/*		803		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiXFORMOBJ_bApplyXform"),
	/*		804		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiXFORMOBJ_iGetXform"),
	/*		805		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiXLATEOBJ_cGetPalette"),
	/*		806		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiXLATEOBJ_hGetColorTransform"),
	/*		807		*/	0,0,RTL_CONSTANT_STRING(L"NtGdiXLATEOBJ_iXlate"),
	/*		808		*/	0,0,RTL_CONSTANT_STRING(L"NtHWCursorUpdatePointer"),
	/*		809		*/	0,0,RTL_CONSTANT_STRING(L"NtIsOneCoreTransformMode"),
	/*		810		*/	0,0,RTL_CONSTANT_STRING(L"NtMITActivateInputProcessing"),
	/*		811		*/	0,0,RTL_CONSTANT_STRING(L"NtMITCoreMsgKGetConnectionHandle"),
	/*		812		*/	0,0,RTL_CONSTANT_STRING(L"NtMITCoreMsgKOpenConnectionTo"),
	/*		813		*/	0,0,RTL_CONSTANT_STRING(L"NtMITCoreMsgKSend"),
	/*		814		*/	0,0,RTL_CONSTANT_STRING(L"NtMITDeactivateInputProcessing"),
	/*		815		*/	0,0,RTL_CONSTANT_STRING(L"NtMITDisableMouseIntercept"),
	/*		816		*/	0,0,RTL_CONSTANT_STRING(L"NtMITDispatchCompletion"),
	/*		817		*/	0,0,RTL_CONSTANT_STRING(L"NtMITEnableMouseIntercept"),
	/*		818		*/	0,0,RTL_CONSTANT_STRING(L"NtMITGetCursorUpdateHandle"),
	/*		819		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSetInputCallbacks"),
	/*		820		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSetInputDelegationMode"),
	/*		821		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSetLastInputRecipient"),
	/*		822		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSynthesizeMouseInput"),
	/*		823		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSynthesizeMouseWheel"),
	/*		824		*/	0,0,RTL_CONSTANT_STRING(L"NtMITSynthesizeTouchInput"),
	/*		825		*/	0,0,RTL_CONSTANT_STRING(L"NtMITUpdateInputGlobals"),
	/*		826		*/	0,0,RTL_CONSTANT_STRING(L"NtMITWaitForMultipleObjectsEx"),
	/*		827		*/	0,0,RTL_CONSTANT_STRING(L"NtMapVisualRelativePoints"),
	/*		828		*/	0,0,RTL_CONSTANT_STRING(L"NtNotifyPresentToCompositionSurface"),
	/*		829		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenCompositionSurfaceDirtyRegion"),
	/*		830		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenCompositionSurfaceSectionInfo"),
	/*		831		*/	0,0,RTL_CONSTANT_STRING(L"NtOpenCompositionSurfaceSwapChainHandleInfo"),
	/*		832		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionInputIsImplicit"),
	/*		833		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionInputQueueAndTransform"),
	/*		834		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionInputSink"),
	/*		835		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionInputSinkLuid"),
	/*		836		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionInputSinkViewId"),
	/*		837		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionSurfaceBinding"),
	/*		838		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionSurfaceHDRMetaData"),
	/*		839		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionSurfaceRenderingRealization"),
	/*		840		*/	0,0,RTL_CONSTANT_STRING(L"NtQueryCompositionSurfaceStatistics"),
	/*		841		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMAddInputObserver"),
	/*		842		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMAreSiblingDevices"),
	/*		843		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMDeviceIoControl"),
	/*		844		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMEnableMonitorMappingForDevice"),
	/*		845		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMFreeInputBuffer"),
	/*		846		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetDevicePreparsedData"),
	/*		847		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetDevicePreparsedDataLockfree"),
	/*		848		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetDeviceProperties"),
	/*		849		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetDevicePropertiesLockfree"),
	/*		850		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetPhysicalDeviceRect"),
	/*		851		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMGetSourceProcessId"),
	/*		852		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMObserveNextInput"),
	/*		853		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMOnPnpNotification"),
	/*		854		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMOnTimerNotification"),
	/*		855		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMReadInput"),
	/*		856		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMRegisterForInput"),
	/*		857		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMRemoveInputObserver"),
	/*		858		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMSetTestModeStatus"),
	/*		859		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMUnregisterForInput"),
	/*		860		*/	0,0,RTL_CONSTANT_STRING(L"NtRIMUpdateInputObserverRegistration"),
	/*		861		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCompositionSurfaceAnalogExclusive"),
	/*		862		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCompositionSurfaceBufferUsage"),
	/*		863		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCompositionSurfaceDirectFlipState"),
	/*		864		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCompositionSurfaceIndependentFlipInfo"),
	/*		865		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCompositionSurfaceStatistics"),
	/*		866		*/	0,0,RTL_CONSTANT_STRING(L"NtSetCursorInputSpace"),
	/*		867		*/	0,0,RTL_CONSTANT_STRING(L"NtSetPointerDeviceInputSpace"),
	/*		868		*/	0,0,RTL_CONSTANT_STRING(L"NtSetShellCursorState"),
	/*		869		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerConfirmOutstandingAnalogToken"),
	/*		870		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerCreateCompositionTokenHandle"),
	/*		871		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerCreateFlipObjectReturnTokenHandle"),
	/*		872		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerCreateFlipObjectTokenHandle"),
	/*		873		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerGetAnalogExclusiveSurfaceUpdates"),
	/*		874		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerGetAnalogExclusiveTokenEvent"),
	/*		875		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerOpenSectionAndEvents"),
	/*		876		*/	0,0,RTL_CONSTANT_STRING(L"NtTokenManagerThread"),
	/*		877		*/	0,0,RTL_CONSTANT_STRING(L"NtUnBindCompositionSurface"),
	/*		878		*/	0,0,RTL_CONSTANT_STRING(L"NtUpdateInputSinkTransforms"),
	/*		879		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAcquireIAMKey"),
	/*		880		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAcquireInteractiveControlBackgroundAccess"),
	/*		881		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAddClipboardFormatListener"),
	/*		882		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAssociateInputContext"),
	/*		883		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAutoPromoteMouseInPointer"),
	/*		884		*/	0,0,RTL_CONSTANT_STRING(L"NtUserAutoRotateScreen"),
	/*		885		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBeginLayoutUpdate"),
	/*		886		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBlockInput"),
	/*		887		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBroadcastThemeChangeEvent"),
	/*		888		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBuildHimcList"),
	/*		889		*/	0,0,RTL_CONSTANT_STRING(L"NtUserBuildPropList"),
	/*		890		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCalculatePopupWindowPosition"),
	/*		891		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndLockSafe"),
	/*		892		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndOpt"),
	/*		893		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndParamLockSafe"),
	/*		894		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCallHwndSafe"),
	/*		895		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCanBrokerForceForeground"),
	/*		896		*/	0,0,RTL_CONSTANT_STRING(L"NtUserChangeDisplaySettings"),
	/*		897		*/	0,0,RTL_CONSTANT_STRING(L"NtUserChangeWindowMessageFilterEx"),
	/*		898		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCheckAccessForIntegrityLevel"),
	/*		899		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCheckProcessForClipboardAccess"),
	/*		900		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCheckProcessSession"),
	/*		901		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCheckWindowThreadDesktop"),
	/*		902		*/	0,0,RTL_CONSTANT_STRING(L"NtUserChildWindowFromPointEx"),
	/*		903		*/	0,0,RTL_CONSTANT_STRING(L"NtUserClearForeground"),
	/*		904		*/	0,0,RTL_CONSTANT_STRING(L"NtUserClipCursor"),
	/*		905		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCompositionInputSinkLuidFromPoint"),
	/*		906		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCompositionInputSinkViewInstanceIdFromPoint"),
	/*		907		*/	0,0,RTL_CONSTANT_STRING(L"NtUserConfirmResizeCommit"),
	/*		908		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateDCompositionHwndTarget"),
	/*		909		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateDesktopEx"),
	/*		910		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateEmptyCursorObject"),
	/*		911		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateInputContext"),
	/*		912		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreatePalmRejectionDelayZone"),
	/*		913		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateWindowGroup"),
	/*		914		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCreateWindowStation"),
	/*		915		*/	0,0,RTL_CONSTANT_STRING(L"NtUserCtxDisplayIOCtl"),
	/*		916		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDeferWindowDpiChanges"),
	/*		917		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDeferWindowPosAndBand"),
	/*		918		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDelegateCapturePointers"),
	/*		919		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDelegateInput"),
	/*		920		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDeleteWindowGroup"),
	/*		921		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyDCompositionHwndTarget"),
	/*		922		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyInputContext"),
	/*		923		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDestroyPalmRejectionDelayZone"),
	/*		924		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDisableImmersiveOwner"),
	/*		925		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDisableProcessWindowFiltering"),
	/*		926		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDisableThreadIme"),
	/*		927		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDiscardPointerFrameMessages"),
	/*		928		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDisplayConfigGetDeviceInfo"),
	/*		929		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDisplayConfigSetDeviceInfo"),
	/*		930		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDoSoundConnect"),
	/*		931		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDoSoundDisconnect"),
	/*		932		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDragDetect"),
	/*		933		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDragObject"),
	/*		934		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDrawAnimatedRects"),
	/*		935		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDrawCaption"),
	/*		936		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDrawCaptionTemp"),
	/*		937		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDrawMenuBarTemp"),
	/*		938		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDwmGetRemoteSessionOcclusionEvent"),
	/*		939		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDwmGetRemoteSessionOcclusionState"),
	/*		940		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDwmKernelShutdown"),
	/*		941		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDwmKernelStartup"),
	/*		942		*/	0,0,RTL_CONSTANT_STRING(L"NtUserDwmValidateWindow"),
	/*		943		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableChildWindowDpiMessage"),
	/*		944		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableIAMAccess"),
	/*		945		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableMouseInPointer"),
	/*		946		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableMouseInputForCursorSuppression"),
	/*		947		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableNonClientDpiScaling"),
	/*		948		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableResizeLayoutSynchronization"),
	/*		949		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableSoftwareCursorForScreenCapture"),
	/*		950		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableTouchPad"),
	/*		951		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableWindowGDIScaledDpiMessage"),
	/*		952		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableWindowGroupPolicy"),
	/*		953		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEnableWindowResizeOptimization"),
	/*		954		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEndMenu"),
	/*		955		*/	0,0,RTL_CONSTANT_STRING(L"NtUserEvent"),
	/*		956		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFlashWindowEx"),
	/*		957		*/	0,0,RTL_CONSTANT_STRING(L"NtUserForceWindowToDpiForTest"),
	/*		958		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFrostCrashedWindow"),
	/*		959		*/	0,0,RTL_CONSTANT_STRING(L"NtUserFunctionalizeDisplayConfig"),
	/*		960		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetActiveProcessesDpis"),
	/*		961		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAppImeLevel"),
	/*		962		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetAutoRotationState"),
	/*		963		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCIMSSM"),
	/*		964		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCaretPos"),
	/*		965		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipCursor"),
	/*		966		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardAccessToken"),
	/*		967		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetClipboardViewer"),
	/*		968		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetComboBoxInfo"),
	/*		969		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCurrentDpiInfoForWindow"),
	/*		970		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCurrentInputMessageSource"),
	/*		971		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCursor"),
	/*		972		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetCursorInfo"),
	/*		973		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDManipHookInitFunction"),
	/*		974		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDesktopID"),
	/*		975		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDisplayAutoRotationPreferences"),
	/*		976		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDisplayAutoRotationPreferencesByProcessId"),
	/*		977		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDisplayConfigBufferSizes"),
	/*		978		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDpiForCurrentProcess"),
	/*		979		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetDpiForMonitor"),
	/*		980		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetGestureConfig"),
	/*		981		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetGestureExtArgs"),
	/*		982		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetGestureInfo"),
	/*		983		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetGuiResources"),
	/*		984		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetHDevName"),
	/*		985		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetHimetricScaleFactorFromPixelLocation"),
	/*		986		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetImeHotKey"),
	/*		987		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetImeInfoEx"),
	/*		988		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetInputLocaleInfo"),
	/*		989		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetInteractiveControlDeviceInfo"),
	/*		990		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetInteractiveControlInfo"),
	/*		991		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetInteractiveCtrlSupportedWaveforms"),
	/*		992		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetInternalWindowPos"),
	/*		993		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyNameText"),
	/*		994		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyboardLayout"),
	/*		995		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetKeyboardLayoutName"),
	/*		996		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetLayeredWindowAttributes"),
	/*		997		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetListBoxInfo"),
	/*		998		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetMenuIndex"),
	/*		999		*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetMenuItemRect"),
	/*		1000	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetMouseMovePointsEx"),
	/*		1001	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetOemBitmapSize"),
	/*		1002	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPhysicalDeviceRect"),
	/*		1003	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerCursorId"),
	/*		1004	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerDevice"),
	/*		1005	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerDeviceCursors"),
	/*		1006	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerDeviceProperties"),
	/*		1007	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerDeviceRects"),
	/*		1008	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerDevices"),
	/*		1009	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerFrameArrivalTimes"),
	/*		1010	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerInfoList"),
	/*		1011	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerInputTransform"),
	/*		1012	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPointerType"),
	/*		1013	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPrecisionTouchPadConfiguration"),
	/*		1014	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetPriorityClipboardFormat"),
	/*		1015	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetProcessDpiAwarenessContext"),
	/*		1016	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetProcessUIContextInformation"),
	/*		1017	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetQueueStatusReadonly"),
	/*		1018	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRawInputBuffer"),
	/*		1019	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRawInputData"),
	/*		1020	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRawInputDeviceInfo"),
	/*		1021	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRawInputDeviceList"),
	/*		1022	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRawPointerDeviceData"),
	/*		1023	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRegisteredRawInputDevices"),
	/*		1024	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetRequiredCursorSizes"),
	/*		1025	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetResizeDCompositionSynchronizationObject"),
	/*		1026	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetSystemDpiForProcess"),
	/*		1027	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetTopLevelWindow"),
	/*		1028	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetTouchInputInfo"),
	/*		1029	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetTouchValidationStatus"),
	/*		1030	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetUpdatedClipboardFormats"),
	/*		1031	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWOWClass"),
	/*		1032	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowBand"),
	/*		1033	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowCompositionAttribute"),
	/*		1034	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowCompositionInfo"),
	/*		1035	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowDisplayAffinity"),
	/*		1036	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowFeedbackSetting"),
	/*		1037	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowGroupId"),
	/*		1038	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowMinimizeRect"),
	/*		1039	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowProcessHandle"),
	/*		1040	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGetWindowRgnEx"),
	/*		1041	*/	0,0,RTL_CONSTANT_STRING(L"NtUserGhostWindowFromHungWindow"),
	/*		1042	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHandleDelegatedInput"),
	/*		1043	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHardErrorControl"),
	/*		1044	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHidePointerContactVisualization"),
	/*		1045	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHiliteMenuItem"),
	/*		1046	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHungWindowFromGhostWindow"),
	/*		1047	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHwndQueryRedirectionInfo"),
	/*		1048	*/	0,0,RTL_CONSTANT_STRING(L"NtUserHwndSetRedirectionInfo"),
	/*		1049	*/	0,0,RTL_CONSTANT_STRING(L"NtUserImpersonateDdeClientWindow"),
	/*		1050	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInheritWindowMonitor"),
	/*		1051	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitTask"),
	/*		1052	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitialize"),
	/*		1053	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializeClientPfnArrays"),
	/*		1054	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializeGenericHidInjection"),
	/*		1055	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializeInputDeviceInjection"),
	/*		1056	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializePointerDeviceInjection"),
	/*		1057	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializePointerDeviceInjectionEx"),
	/*		1058	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInitializeTouchInjection"),
	/*		1059	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectDeviceInput"),
	/*		1060	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectGenericHidInput"),
	/*		1061	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectGesture"),
	/*		1062	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectKeyboardInput"),
	/*		1063	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectMouseInput"),
	/*		1064	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectPointerInput"),
	/*		1065	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInjectTouchInput"),
	/*		1066	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInteractiveControlQueryUsage"),
	/*		1067	*/	0,0,RTL_CONSTANT_STRING(L"NtUserInternalGetWindowIcon"),
	/*		1068	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsChildWindowDpiMessageEnabled"),
	/*		1069	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsMouseInPointerEnabled"),
	/*		1070	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsMouseInputEnabled"),
	/*		1071	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsNonClientDpiScalingEnabled"),
	/*		1072	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsResizeLayoutSynchronizationEnabled"),
	/*		1073	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsTopLevelWindow"),
	/*		1074	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsTouchWindow"),
	/*		1075	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsWindowBroadcastingDpiToChildren"),
	/*		1076	*/	0,0,RTL_CONSTANT_STRING(L"NtUserIsWindowGDIScaledDpiMessageEnabled"),
	/*		1077	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLayoutCompleted"),
	/*		1078	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLinkDpiCursor"),
	/*		1079	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLoadKeyboardLayoutEx"),
	/*		1080	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLockCursor"),
	/*		1081	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLockWindowStation"),
	/*		1082	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLockWorkStation"),
	/*		1083	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLogicalToPerMonitorDPIPhysicalPoint"),
	/*		1084	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLogicalToPhysicalDpiPointForWindow"),
	/*		1085	*/	0,0,RTL_CONSTANT_STRING(L"NtUserLogicalToPhysicalPoint"),
	/*		1086	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMNDragLeave"),
	/*		1087	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMNDragOver"),
	/*		1088	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMagControl"),
	/*		1089	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMagGetContextInformation"),
	/*		1090	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMagSetContextInformation"),
	/*		1091	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMenuItemFromPoint"),
	/*		1092	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMinMaximize"),
	/*		1093	*/	0,0,RTL_CONSTANT_STRING(L"NtUserModifyWindowTouchCapability"),
	/*		1094	*/	0,0,RTL_CONSTANT_STRING(L"NtUserMsgWaitForMultipleObjectsEx"),
	/*		1095	*/	0,0,RTL_CONSTANT_STRING(L"NtUserNavigateFocus"),
	/*		1096	*/	0,0,RTL_CONSTANT_STRING(L"NtUserNotifyIMEStatus"),
	/*		1097	*/	0,0,RTL_CONSTANT_STRING(L"NtUserOpenInputDesktop"),
	/*		1098	*/	0,0,RTL_CONSTANT_STRING(L"NtUserOpenThreadDesktop"),
	/*		1099	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPaintMonitor"),
	/*		1100	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPerMonitorDPIPhysicalToLogicalPoint"),
	/*		1101	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPhysicalToLogicalDpiPointForWindow"),
	/*		1102	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPhysicalToLogicalPoint"),
	/*		1103	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPrintWindow"),
	/*		1104	*/	0,0,RTL_CONSTANT_STRING(L"NtUserProcessInkFeedbackCommand"),
	/*		1105	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPromoteMouseInPointer"),
	/*		1106	*/	0,0,RTL_CONSTANT_STRING(L"NtUserPromotePointer"),
	/*		1107	*/	0,0,RTL_CONSTANT_STRING(L"NtUserQueryBSDRWindow"),
	/*		1108	*/	0,0,RTL_CONSTANT_STRING(L"NtUserQueryDisplayConfig"),
	/*		1109	*/	0,0,RTL_CONSTANT_STRING(L"NtUserQueryInformationThread"),
	/*		1110	*/	0,0,RTL_CONSTANT_STRING(L"NtUserQueryInputContext"),
	/*		1111	*/	0,0,RTL_CONSTANT_STRING(L"NtUserQuerySendMessage"),
	/*		1112	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRealChildWindowFromPoint"),
	/*		1113	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRealWaitMessageEx"),
	/*		1114	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterBSDRWindow"),
	/*		1115	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterDManipHook"),
	/*		1116	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterEdgy"),
	/*		1117	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterErrorReportingDialog"),
	/*		1118	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterHotKey"),
	/*		1119	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterManipulationThread"),
	/*		1120	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterPointerDeviceNotifications"),
	/*		1121	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterPointerInputTarget"),
	/*		1122	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterRawInputDevices"),
	/*		1123	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterServicesProcess"),
	/*		1124	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterSessionPort"),
	/*		1125	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterShellPTPListener"),
	/*		1126	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterTasklist"),
	/*		1127	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterTouchHitTestingWindow"),
	/*		1128	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterTouchPadCapable"),
	/*		1129	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRegisterUserApiHook"),
	/*		1130	*/	0,0,RTL_CONSTANT_STRING(L"NtUserReleaseDC"),
	/*		1131	*/	0,0,RTL_CONSTANT_STRING(L"NtUserReleaseDwmHitTestWaiters"),
	/*		1132	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoteConnect"),
	/*		1133	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoteRedrawRectangle"),
	/*		1134	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoteRedrawScreen"),
	/*		1135	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoteStopScreenUpdates"),
	/*		1136	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoveClipboardFormatListener"),
	/*		1137	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRemoveInjectionDevice"),
	/*		1138	*/	0,0,RTL_CONSTANT_STRING(L"NtUserReportInertia"),
	/*		1139	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRequestMoveSizeOperation"),
	/*		1140	*/	0,0,RTL_CONSTANT_STRING(L"NtUserResolveDesktopForWOW"),
	/*		1141	*/	0,0,RTL_CONSTANT_STRING(L"NtUserRestoreWindowDpiChanges"),
	/*		1142	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSendEventMessage"),
	/*		1143	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSendInteractiveControlHapticsReport"),
	/*		1144	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetActivationFilter"),
	/*		1145	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetActiveProcessForMonitor"),
	/*		1146	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetAppImeLevel"),
	/*		1147	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetAutoRotation"),
	/*		1148	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetBridgeWindowChild"),
	/*		1149	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetBrokeredForeground"),
	/*		1150	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCalibrationData"),
	/*		1151	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetChildWindowNoActivate"),
	/*		1152	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetClassWord"),
	/*		1153	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCoreWindow"),
	/*		1154	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCoreWindowPartner"),
	/*		1155	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCursorContents"),
	/*		1156	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetCursorPos"),
	/*		1157	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetDesktopColorTransform"),
	/*		1158	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetDialogControlDpiChangeBehavior"),
	/*		1159	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetDisplayAutoRotationPreferences"),
	/*		1160	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetDisplayConfig"),
	/*		1161	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetDisplayMapping"),
	/*		1162	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetFallbackForeground"),
	/*		1163	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetFeatureReportResponse"),
	/*		1164	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetForegroundWindowForApplication"),
	/*		1165	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetGestureConfig"),
	/*		1166	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetImeHotKey"),
	/*		1167	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetImeInfoEx"),
	/*		1168	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetImeOwnerWindow"),
	/*		1169	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetInteractiveControlFocus"),
	/*		1170	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetInteractiveCtrlRotationAngle"),
	/*		1171	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetInternalWindowPos"),
	/*		1172	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetLayeredWindowAttributes"),
	/*		1173	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetManipulationInputTarget"),
	/*		1174	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetMenu"),
	/*		1175	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetMenuContextHelpId"),
	/*		1176	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetMenuFlagRtoL"),
	/*		1177	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetMirrorRendering"),
	/*		1178	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetObjectInformation"),
	/*		1179	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetPrecisionTouchPadConfiguration"),
	/*		1180	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProcessDpiAwarenessContext"),
	/*		1181	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProcessInteractionFlags"),
	/*		1182	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProcessRestrictionExemption"),
	/*		1183	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetProcessUIAccessZorder"),
	/*		1184	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetShellWindowEx"),
	/*		1185	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetSysColors"),
	/*		1186	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetSystemCursor"),
	/*		1187	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetSystemTimer"),
	/*		1188	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetTargetForResourceBrokering"),
	/*		1189	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetThreadInputBlocked"),
	/*		1190	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetThreadLayoutHandles"),
	/*		1191	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowArrangement"),
	/*		1192	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowBand"),
	/*		1193	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowCompositionAttribute"),
	/*		1194	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowCompositionTransition"),
	/*		1195	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowDisplayAffinity"),
	/*		1196	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowFeedbackSetting"),
	/*		1197	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowGroup"),
	/*		1198	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowRgnEx"),
	/*		1199	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowShowState"),
	/*		1200	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowStationUser"),
	/*		1201	*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowCursor"),
	/*		1202	*/	0,0,RTL_CONSTANT_STRING(L"NtUserShowSystemCursor"),
	/*		1203	*/	0,0,RTL_CONSTANT_STRING(L"NtUserShutdownBlockReasonCreate"),
	/*		1204	*/	0,0,RTL_CONSTANT_STRING(L"NtUserShutdownBlockReasonQuery"),
	/*		1205	*/	0,0,RTL_CONSTANT_STRING(L"NtUserShutdownReasonDestroy"),
	/*		1206	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSignalRedirectionStartComplete"),
	/*		1207	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSlicerControl"),
	/*		1208	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSoundSentry"),
	/*		1209	*/	0,0,RTL_CONSTANT_STRING(L"NtUserStopAndEndInertia"),
	/*		1210	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSwitchDesktop"),
	/*		1211	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSystemParametersInfoForDpi"),
	/*		1212	*/	0,0,RTL_CONSTANT_STRING(L"NtUserTestForInteractiveUser"),
	/*		1213	*/	0,0,RTL_CONSTANT_STRING(L"NtUserTrackPopupMenuEx"),
	/*		1214	*/	0,0,RTL_CONSTANT_STRING(L"NtUserTransformPoint"),
	/*		1215	*/	0,0,RTL_CONSTANT_STRING(L"NtUserTransformRect"),
	/*		1216	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUndelegateInput"),
	/*		1217	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnloadKeyboardLayout"),
	/*		1218	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnlockWindowStation"),
	/*		1219	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnregisterHotKey"),
	/*		1220	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnregisterSessionPort"),
	/*		1221	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUnregisterUserApiHook"),
	/*		1222	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateDefaultDesktopThumbnail"),
	/*		1223	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateInputContext"),
	/*		1224	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateInstance"),
	/*		1225	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateLayeredWindow"),
	/*		1226	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdatePerUserSystemParameters"),
	/*		1227	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateWindowInputSinkHints"),
	/*		1228	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUpdateWindowTrackingInfo"),
	/*		1229	*/	0,0,RTL_CONSTANT_STRING(L"NtUserUserHandleGrantAccess"),
	/*		1230	*/	0,0,RTL_CONSTANT_STRING(L"NtUserValidateHandleSecure"),
	/*		1231	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWOWCleanup"),
	/*		1232	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWaitAvailableMessageEx"),
	/*		1233	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWaitForInputIdle"),
	/*		1234	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWaitForMsgAndEvent"),
	/*		1235	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWaitForRedirectionStartComplete"),
	/*		1236	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWindowFromDC"),
	/*		1237	*/	0,0,RTL_CONSTANT_STRING(L"NtUserWindowFromPhysicalPoint"),
	/*		1238	*/	0,0,RTL_CONSTANT_STRING(L"NtValidateCompositionSurfaceHandle"),
	/*		1239	*/	0,0,RTL_CONSTANT_STRING(L"NtVisualCaptureBits"),
	/*		1240	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetClassLongPtr"),
	/*		1241	*/	0,0,RTL_CONSTANT_STRING(L"NtUserSetWindowLongPtr"),
};

OS_INFO os_info;																								//全局变量，用于保存当前操作系统的主要信息

#pragma region WIN7_7601

CODE_MODIFY_ENTRY funs_debug_port_7601[] =																		//EPROCESS.debugport进行移位，需要修改的31处代码
{
	{0xFFFFF8000432D7B2 - 0xFFFFF80003e63000,{0x4C,0x39,0xA5,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000432D7EF - 0xFFFFF80003e63000,{0x4C,0x89,0xA5,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000432D8E8 - 0xFFFFF80003e63000,{0x4C,0x89,0xA5,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000432D7C7 - 0xFFFFF80003e63000,{0x4C,0x89,0xAD,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004277BDB - 0xFFFFF80003e63000,{0x48,0x39,0x8B,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800041D351D - 0xFFFFF80003e63000,{0x48,0x39,0x9F,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004308E86 - 0xFFFFF80003e63000,{0x48,0x39,0xAF,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004308ECF - 0xFFFFF80003e63000,{0x48,0x39,0xAF,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004192DED - 0xFFFFF80003e63000,{0x48,0x83,0xA1,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004225ABC - 0xFFFFF80003e63000,{0x48,0x83,0xA3,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004283493 - 0xFFFFF80003e63000,{0x48,0x83,0xA5,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004308ED8 - 0xFFFFF80003e63000,{0x48,0x83,0xA7,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800041FFD81 - 0xFFFFF80003e63000,{0x48,0x83,0xB9,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004302828 - 0xFFFFF80003e63000,{0x48,0x83,0xB9,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800041B83FE - 0xFFFFF80003e63000,{0x48,0x83,0xB9,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80003F1EEC5 - 0xFFFFF80003e63000,{0x48,0x83,0xB9,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000414D32E - 0xFFFFF80003e63000,{0x48,0x83,0xB9,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004282A3A - 0xFFFFF80003e63000,{0x48,0x83,0xBA,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000419BED8 - 0xFFFFF80003e63000,{0x48,0x83,0xBF,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004009A05 - 0xFFFFF80003e63000,{0x48,0x89,0x95,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800042266E7 - 0xFFFFF80003e63000,{0x48,0x89,0x9E,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000423ED74 - 0xFFFFF80003e63000,{0x48,0x8B,0x81,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80003F68300 - 0xFFFFF80003e63000,{0x48,0x8B,0x81,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000419BB40 - 0xFFFFF80003e63000,{0x48,0x8B,0x8B,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800041A86DE - 0xFFFFF80003e63000,{0x48,0x8B,0x99,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000428347D - 0xFFFFF80003e63000,{0x48,0x8B,0xBD,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004282313 - 0xFFFFF80003e63000,{0x49,0x8B,0xBF,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF80004192E0D - 0xFFFFF80003e63000,{0x4C,0x39,0x82,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800042829B7 - 0xFFFFF80003e63000,{0x49,0x83,0xB8,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF8000419A05A - 0xFFFFF80003e63000,{0x48,0x83,0xBD,0x00,0x00},3,4,0x1f0,0x2a0,0},
	{0xFFFFF800041B8C86 - 0xFFFFF80003e63000,{0x49,0x39,0xB4,0x24,0x00},4,4,0x1f0,0x2a0,0},
};


CODE_REPLACE_ENTRY fun_replace_7601[] =
{
	{0xFFFFF80004277BE2 - 0xFFFFF80003e63000,3,3,{0x0F,0x95,0xC1,0x00,0x00},{0x32,0xc9,0x90,0x00,0x00},0},		//禁止内核设置peb.debugport 改 setnz cl; 为 xor cl,cl;nop;
};

#pragma endregion

#pragma region WIN10_17763

CODE_MODIFY_ENTRY funs_debug_port_17763[] =																		//EPROCESS.debugport进行移位
{
	{0xFFFFF8073A61A3CB - 0xFFFFF80739E0B000,{0x4C,0x89,0xBE,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A57CE2A - 0xFFFFF80739E0B000,{0x4C,0x89,0xBF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61A3B9 - 0xFFFFF80739E0B000,{0x4C,0x39,0xA6,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61A117 - 0xFFFFF80739E0B000,{0x49,0x8B,0xB5,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3D5A72 - 0xFFFFF80739E0B000,{0x49,0x39,0xB6,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A4169AF - 0xFFFFF80739E0B000,{0x48,0x8B,0x9A,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61902D - 0xFFFFF80739E0B000,{0x48,0x8B,0x9E,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A4D0459 - 0xFFFFF80739E0B000,{0x48,0x8B,0x9E,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A4C5A7E - 0xFFFFF80739E0B000,{0x48,0x8B,0x9E,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A5A1810 - 0xFFFFF80739E0B000,{0x48,0x8B,0x9F,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61946B - 0xFFFFF80739E0B000,{0x48,0x39,0xAF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A416992 - 0xFFFFF80739E0B000,{0x48,0x83,0xA1,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A619474 - 0xFFFFF80739E0B000,{0x48,0x83,0xA7,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61C180 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61C0D8 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3F6509 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3C1687 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF80739E7C6A1 - 0xFFFFF80739E0B000,{0x48,0x83,0xBA,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3FB611 - 0xFFFFF80739E0B000,{0x48,0x83,0xBF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3FA740 - 0xFFFFF80739E0B000,{0x48,0x83,0xBF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A5A1900 - 0xFFFFF80739E0B000,{0x48,0x89,0x9E,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61A3F4 - 0xFFFFF80739E0B000,{0x4C,0x89,0xA6,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A5C11B2 - 0xFFFFF80739E0B000,{0x48,0x83,0xA6,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A61A490 - 0xFFFFF80739E0B000,{0x4C,0x89,0xA6,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	{0xFFFFF8073A3D2D7A - 0xFFFFF80739E0B000,{0x48,0x83,0xBF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},
	//以下debugport偏移无需修改，可用于反反调试
	//{0xFFFFF8073A61972A - 0xFFFFF80739E0B000,{0x48,0x83,0xBB,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//DbgkpMarkProcessPeb
	//{0xFFFFF8073A5DDD1D - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//ObCloseHandleTableEntry
	//{0xFFFFF8073A619005 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//DbgkOpenProcessDebugPort                                      
	//{0xFFFFF8073A58FFC5 - 0xFFFFF80739E0B000,{0x4C,0x39,0xAE,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//ObpCloseHandle                                   
	//{0xFFFFF8073A4B0EAB - 0xFFFFF80739E0B000,{0x49,0x83,0xBD,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//NtClose                              
	//{0xFFFFF8073A5443F5 - 0xFFFFF80739E0B000,{0x48,0x83,0xB9,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//DbgkCreateMinimalProcess                                 
	//{0xFFFFF8073A61C025 - 0xFFFFF80739E0B000,{0x48,0x83,0xBF,0x20,0x04,0x00,0x00,0x00},3,4,0x420,0x3e8,0},		//DbgkCreateMinimalThread                                
};



CODE_REPLACE_ENTRY fun_replace_17763[] =
{
	//{0xFFFFF8073A619732 - 0xFFFFF80739E0B000,3,3,{0x0F,0x95,0xC1,0x00,0x00},{0x32,0xc9,0x90,0x00,0x00},0},			//禁止内核设置peb.debugport 改 setnz cl; 为 xor cl,cl;nop;
	//{0xFFFFF8073A5DECCB - 0xFFFFF80739E0B000,1,1,{0x74,0x11,0x00,0x00,0x00},{0xeb,0x11,0x00,0x00,0x00},0},			//禁止内核对用户层的ntclose函数调用失败时有调试器情况下引发异常
	{0xFFFFF80739FBC8B0 - 0xFFFFF80739E0B000,6,6,{0x48,0x8B,0xC4,0xfa,0x48,0x83},{0xB8,0x22,0x00,0x00,0xC0,0XC3},0},	//禁止注册EWT hook
};

CODE_REPLACE_ENTRY fun_callback_17763[] =
{
	{0xFFFFF8073A510D90 - 0xFFFFF80739E0B000,1,1,{0x48,0x00,0x00,0x00,0x00},{0xc3,0x00,0x00,0x00,0x00},0},				//禁止注册进程回调
	{0xFFFFF8073A510AC0 - 0xFFFFF80739E0B000,1,1,{0x48,0x00,0x00,0x00,0x00},{0xc3,0x00,0x00,0x00,0x00},0},				//禁止注册线程回调
	{0xFFFFF8073A510B50 - 0xFFFFF80739E0B000,4,4,{0x48,0x89,0x5C,0x24,0x00},{0x48,0x33,0xc0,0xc3,0x00},0},				//禁止注册loadimage回调
};

#pragma endregion


ADPS adps;																												//描述结构体



